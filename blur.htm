<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
						$("#go_home").animate({
								opacity: 'toggle'
							}, 1000, function(){
								go_home_blink();
							});
					}
					go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>blur(handler(eventObject))<br></h2>
   <div class="desc">
      <p>为 JavaScript 的 "blur" 事件绑定一个处理函数，或者触发元素上的该事件。（不支持事件冒泡）</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>blur(handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>blur(<em class="optional">[eventData]</em>, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>eventData</strong>
               								(Object)
               								 可选参数，将要传递给事件处理函数的数据映射。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>blur()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>带有参数的该方法是 <code>.bind('blur', handler)</code> 的快捷方式，不带参数的该方法是 <code>.trigger('blur')</code> 的快捷方式。
         </p>
         
         <p>当一个元素失去焦点时，就会触发 <code>blur</code> 事件。最初，该事件只能应用于表单元素，例如，<code>&lt;input&gt;</code>。但是在最近的浏览器中，该事件的作用域扩大到了所有的元素。元素可以通过键盘命令，如 Tab 键，失去焦点，或通过鼠标点击页面上的其它地方。
            
         </p>
         
         <p>举例来说，请看下面的HTML：</p>
         <pre>&lt;form&gt;
  &lt;input id="target" type="text" value="Field 1" /&gt;
  &lt;input type="text" value="Field 2" /&gt;
&lt;/form&gt;
&lt;div id="other"&gt;
  Trigger the handler
&lt;/div&gt;
The event handler can be bound to the first input field:
$('#target').blur(function() {
  alert('Handler for .blur() called.');
});</pre>
         <p>现在，假设第一个表单字段已经获得了焦点，那么，如果点击了页面其它地方或按下了 Tab 键，就会显示如下提示框：</p>
         
         <p>
            <span class="output">Handler for .blur() called.</span>
            
         </p>
         
         <p>也可以通过程序触发此事件，通过调用不带参数的该方法：</p>
         <pre>$('#other').click(function() {
  $('#target').blur();
});</pre>
         <p>在代码执行后，如果你点击 <span class="output">Trigger the handler</span> 将同样会弹出上面的消息。
         </p>
         
         <p><code>blur</code> 事件在 IE 中不会引发事件冒泡。因此，当脚本依赖于 <code>blur</code> 事件代理时，在跨浏览器的情况下，该脚本可能无法正常工作。然而，从 1.4.2 版本开始，jQuery 通过将 <code>blur</code> 事件映射到 <code>focusout</code> 事件的方法，绕过了这个限制，从而可以在 <code><a href="live.htm">
                  .live()</a></code>
            和 <code><a href="delegate.htm">
                  .delegate()</a></code> 事件代理中使用该方法，解决了跨浏览器的问题。
            
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>触发所有段落上的 blur 事件：</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").blur();</code></pre></div>
</div>
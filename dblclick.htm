<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
						$("#go_home").animate({
								opacity: 'toggle'
							}, 1000, function(){
								go_home_blink();
							});
					}
					go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>dblclick(handler(eventObject))<br></h2>
   <div class="desc">
      <p>为 JavaScript 的 "dblclick" 事件绑定一个处理函数，或者触发元素上的该事件。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>dblclick(handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>dblclick(<em class="optional">[eventData]</em>, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>eventData</strong>
               								(Object)
               								 可选参数，将要传递给事件处理函数的数据映射。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>dblclick()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>带有参数的该方法是 <code>.bind('dblclick', handler)</code> 的快捷方式，不带参数的该方法是 <code>.trigger('dblclick')</code> 的快捷方式。
            当在元素上双击鼠标时，会触发 <code>dblclick</code> 事件。任何 HTML 元素都可以接收该事件。
            举例来说，请看下面的HTML：
         </p>
         <pre>&lt;div id="target"&gt;
  Double-click here
&lt;/div&gt;
&lt;div id="other"&gt;
  Trigger the handler
&lt;/div&gt;</pre>
         
         <p class="image">
            <img src="images/0042_05_04.png" alt="">
            
         </p>
         
         <p>该事件可以绑定在任何 <code>&lt;div&gt;</code> 上：
         </p>
         <pre>$('#target').dblclick(function() {
  alert('Handler for .dblclick() called.');
});</pre>
         <p>现在，在元素上双击鼠标时，就会显示如下提示框：</p>
         
         <p>
            <span class="output">Handler for .dblclick() called.</span>
            
         </p>
         
         <p>我们可以调用不带参数的 <code>.dblclick()</code> 方法，手动触发这个事件：
         </p>
         <pre>$('#other').click(function() {
  $('#target').dblclick();
});</pre>
         <p>执行完上述代码之后，单击 <span class="output">Trigger the handler</span>，同样会显示上面的信息。
         </p>
         
         <p><code>dblclick</code> 事件，只有在满足以下条件的情况下才能被触发：
         </p>
         
         <ul>
            
            <li>鼠标已经被按下，并且鼠标指针在目标元素的内部。</li>
            
            <li>鼠标松开时，鼠标指针依然在该元素的内部。</li>
            
            <li>在系统规定的时间内，再次按下鼠标，并且鼠标指针在目标元素的内部。</li>
            
            <li>鼠标再次被松开时，鼠标指针依然在该元素的内部。</li>
            
         </ul>
         
         <p>在同一元素上同时绑定 <code>click</code> 和 <code>dblclick</code> 事件是不明智的。不同的浏览器对事件的触发顺序是不一样的。有些浏览器可能会先接收到两次 <code>click</code> 事件，然后再接收 <code>dblclick</code>，而有些浏览器可能只接收到其它的一个事件。双击灵敏度(即两次点击之间的时间间隔)在不同的操作系统及浏览器中通常是不一样的，因为用户可以改变其设定。
            
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>在段落上双击时，显示 "Hello World!" 提示框：</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").dblclick( function () { alert("Hello World!"); });</code></pre><h3>示例:</h3>
      <p>双击时改变背景色。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;

  div { background:blue;
        color:white;
        height:100px;
        width:150px;
 }
  div.dbl { background:yellow;color:black; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;&lt;/div&gt;&lt;span&gt;Double click the block&lt;/span&gt;

&lt;script&gt;


    var divdbl = $("div:first");
    divdbl.dblclick(function () { 
      divdbl.toggleClass('dbl'); 
    });



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
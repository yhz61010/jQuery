<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>undelegate()<br></h2>
   <div class="desc">
      <p>Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.</p>
      <ul class="signatures">
         <li>
            <h4><span>1.4.2 新增</span>undelegate()
               								
            </h4>
         </li>
         <li>
            <h4><span>1.4.2 新增</span>undelegate(selector, eventType)
               								
            </h4>
            <div class="arguement"><strong>selector</strong>
               								(String)
               								A selector which will be used to filter the event results.
            </div>
            <div class="arguement"><strong>eventType</strong>
               								(String)
               								包含 JavaScript 事件类型的字符串。例如 "click" 或 "keydown"。
            </div>
         </li>
         <li>
            <h4><span>1.4.2 新增</span>undelegate(selector, eventType, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>selector</strong>
               								(String)
               								A selector which will be used to filter the event results.
            </div>
            <div class="arguement"><strong>eventType</strong>
               								(String)
               								包含 JavaScript 事件类型的字符串。例如 "click" 或 "keydown"。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>undelegate(selector, events)
               								
            </h4>
            <div class="arguement"><strong>selector</strong>
               								(String)
               								A selector which will be used to filter the event results.
            </div>
            <div class="arguement"><strong>events</strong>
               								(Map)
               								A map of one or more event types and previously bound functions to unbind from them.
            </div>
         </li>
         <li>
            <h4><span>1.6 新增</span>undelegate(namespace)
               								
            </h4>
            <div class="arguement"><strong>namespace</strong>
               								(String)
               								A string containing a namespace to unbind all events from.
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>.undelegate()</code> method is a way of removing event handlers that have been bound using <code><a href="delegate.htm">
                  .delegate()</a></code>
            . <strong>As of jQuery 1.7</strong>, the <code><a href="on.htm">
                  .on()</a></code>
            and <code><a href="off.htm">
                  .off()</a></code>
            methods are preferred for attaching and removing event handlers.
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Can bind and unbind events to the colored button.</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
button { margin:5px; }
button#theone { color:red; background:yellow; }
&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;button id="theone"&gt;Does nothing...&lt;/button&gt;
&lt;button id="bind"&gt;Bind Click&lt;/button&gt;
&lt;button id="unbind"&gt;Unbind Click&lt;/button&gt;
&lt;div style="display:none;"&gt;Click!&lt;/div&gt;

&lt;script&gt;


function aClick() {
  $("div").show().fadeOut("slow");
}
$("#bind").click(function () {
  $("body").delegate("#theone", "click", aClick)
    .find("#theone").text("Can Click!");
});
$("#unbind").click(function () {
  $("body").undelegate("#theone", "click", aClick)
    .find("#theone").text("Does nothing...");
});


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>To unbind all delegated events from all paragraphs, write:</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").undelegate()</code></pre><h3>示例:</h3>
      <p>To unbind all delegated click events from all paragraphs, write:</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").undelegate( "click" )</code></pre><h3>示例:</h3>
      <p>To undelegate just one previously bound handler, pass the function in as the third argument:</p>
      <h5>jQuery 代码:</h5><pre><code>var foo = function () {
  // code to handle some kind of event
};

// ... now foo will be called when paragraphs are clicked ...
$("body").delegate("p", "click", foo);


// ... foo will no longer be called.
$("body").undelegate("p", "click", foo); </code></pre><h3>示例:</h3>
      <p>To unbind all delegated events by their namespace:</p>
      <h5>jQuery 代码:</h5><pre><code>var foo = function () {
  // code to handle some kind of event
};

// delegate events under the ".whatever" namespace
$("form").delegate(":button", "click.whatever", foo);

$("form").delegate("input[type='text']", "keypress.whatever", foo); 

// unbind all events delegated under the ".whatever" namespace

$("form").undelegate(".whatever");</code></pre></div>
</div>
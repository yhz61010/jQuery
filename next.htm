<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>next(<em class="optional">[selector]</em>)<br></h2>
   <div class="desc">
      <p>Get the immediately following sibling of each element in the set of matched elements. If a selector is provided, it retrieves
         the next sibling only if it matches that selector.
      </p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>next(<em class="optional">[selector]</em>)
               								
            </h4>
            <div class="arguement"><strong>selector</strong>
               								(Selector)
               								 可选参数，用于匹配元素的选择器表达式字符串。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>若一个 jQuery 对象代表了一个 DOM 元素集合，<code>.next()</code> method allows us to search through the immediately following sibling of these elements in the DOM tree and construct a new
            jQuery object from the matching elements.
         </p>
         
         <p>The method optionally accepts a selector expression of the same type that we can pass to the <code>$()</code> function. If the immediately following sibling matches the selector, it remains in the newly constructed jQuery object; otherwise,
            it is excluded.
         </p>
         
         <p>例如，在页面中有如下一个简单的列表：</p>
         <pre>
&lt;ul&gt;
   &lt;li&gt;list item 1&lt;/li&gt;
   &lt;li&gt;list item 2&lt;/li&gt;
   &lt;li class="third-item"&gt;list item 3&lt;/li&gt;
   &lt;li&gt;list item 4&lt;/li&gt;
   &lt;li&gt;list item 5&lt;/li&gt;
&lt;/ul&gt;
</pre>
         <p>If we begin at the third item, we can find the element which comes just after it:</p>
         <pre>$('li.third-item').next().css('background-color', 'red');</pre>
         <p>The result of this call is a red background behind item 4. Since we do not supply a selector expression, this following element
            is unequivocally included as part of the object. If we had supplied one, the element would be tested for a match before it
            was included.
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Find the very next sibling of each disabled button and change its text "this button is disabled".</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;

  span { color:blue; font-weight:bold; }
  button { width:100px; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;&lt;button disabled="disabled"&gt;First&lt;/button&gt; - &lt;span&gt;&lt;/span&gt;&lt;/div&gt;
  &lt;div&gt;&lt;button&gt;Second&lt;/button&gt; - &lt;span&gt;&lt;/span&gt;&lt;/div&gt;

  &lt;div&gt;&lt;button disabled="disabled"&gt;Third&lt;/button&gt; - &lt;span&gt;&lt;/span&gt;&lt;/div&gt;

&lt;script&gt;

$("button[disabled]").next().text("this button is disabled");

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>Find the very next sibling of each paragraph. Keep only the ones with a class "selected".</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;Hello&lt;/p&gt;

  &lt;p class="selected"&gt;Hello Again&lt;/p&gt;
  &lt;div&gt;&lt;span&gt;And Again&lt;/span&gt;&lt;/div&gt;

&lt;script&gt;

$("p").next(".selected").css("background", "yellow");

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
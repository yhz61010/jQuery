<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Object</span>triggerHandler(eventType, <em class="optional">[extraParameters]</em>)<br></h2>
   <div class="desc">
      <p>Execute all handlers attached to an element for an event.</p>
      <ul class="signatures">
         <li>
            <h4><span>1.2 新增</span>triggerHandler(eventType, <em class="optional">[extraParameters]</em>)
               								
            </h4>
            <div class="arguement"><strong>eventType</strong>
               								(String)
               								包含 JavaScript 事件类型的字符串。例如 <code>click</code> 或 <code>submit</code>。
            </div>
            <div class="arguement"><strong>extraParameters</strong>
               								(Array)
               								 可选参数，An array of additional parameters to pass along to the event handler.
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>.triggerHandler()</code> method behaves similarly to <code>.trigger()</code>, with the following exceptions:
         </p>
         
         <ul>
            
            <li>The <code>.triggerHandler()</code> method does not cause the default behavior of an event to occur (such as a form submission).
            </li>
            
            <li>While <code>.trigger()</code> will operate on all elements matched by the jQuery object, <code>.triggerHandler()</code> only affects the first matched element.
            </li>
            
            <li>Events created with <code>.triggerHandler()</code> do not bubble up the DOM hierarchy; if they are not handled by the target element directly, they do nothing.
            </li>
            
            <li>Instead of returning the jQuery object (to allow chaining), <code>.triggerHandler()</code> returns whatever value was returned by the last handler it caused to be executed. If no handlers are triggered, it returns
               <code>undefined</code>
               
            </li>
            
         </ul>
         
         <p>For more information on this method, see the discussion for <code>
               <a href="trigger.htm">.trigger()</a>
               </code>.
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>If you called .triggerHandler() on a focus event - the browser's default focus action would not be triggered, only the event
         handlers bound to the focus event.
      </p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;button id="old"&gt;.trigger("focus")&lt;/button&gt;
&lt;button id="new"&gt;.triggerHandler("focus")&lt;/button&gt;&lt;br/&gt;&lt;br/&gt;

&lt;input type="text" value="To Be Focused"/&gt;

&lt;script&gt;



$("#old").click(function(){
$("input").trigger("focus");
});
$("#new").click(function(){
$("input").triggerHandler("focus");
});
$("input").focus(function(){
$("&lt;span&gt;Focused!&lt;/span&gt;").appendTo("body").fadeOut(1000);
});



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
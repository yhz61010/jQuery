<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>fadeIn(<em class="optional">[duration]</em>, <em class="optional">[callback]</em>)<br></h2>
   <div class="desc">
      <p>通过改变透明度将匹配的元素淡入显示。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>fadeIn(<em class="optional">[duration]</em>, <em class="optional">[callback]</em>)
               								
            </h4>
            <div class="arguement"><strong>duration</strong>
               								(String,Number)
               								 可选参数，字符串("slow"或 "fast")或表示动画时长的毫秒数值。
            </div>
            <div class="arguement"><strong>callback</strong>
               								(Callback)
               								 可选参数，在动画完成时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>fadeIn(<em class="optional">[duration]</em>, <em class="optional">[easing]</em>, <em class="optional">[callback]</em>)
               								
            </h4>
            <div class="arguement"><strong>duration</strong>
               								(String,Number)
               								 可选参数，字符串("slow"或 "fast")或表示动画时长的毫秒数值。
            </div>
            <div class="arguement"><strong>easing</strong>
               								(String)
               								 可选参数，要使用的缓冲效果的名称<del>，默认值是 "swing"。jQuery 内置提供 "linear" 和 "swing" 两种效果，如果要使用更多缓冲效果，需要插件支持</del>。
            </div>
            <div class="arguement"><strong>callback</strong>
               								(Callback)
               								 可选参数，在动画完成时执行的函数。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>.fadeIn()</code> 方法对匹配元素的透明度生成动画效果。
         </p>
         
         <p>duration 参数可以提供一个毫秒数，代表动画运行的时间，时间越长动画越慢。还可以提供字符串 <code>'fast'</code> 和 <code>'slow'</code> ，分别对应了 <code>200</code> 和 <code>600</code> 毫秒。如果没有设置 <code>duration</code> 参数，或者设置成其他无法识别的字符串，就会使用默认值 400 毫秒。
         </p>
         
         <p>我们可以对任何元素应用动画，比如下面这个例子，对图片应用动画：</p>
         <pre>&lt;div id="clickme"&gt;
      Click here
    &lt;/div&gt;
    &lt;img id="book" src="book.png" alt="" width="100" height="123" /&gt;
    With the element initially hidden, we can show it slowly:
    $('#clickme').click(function() {
      $('#book').fadeIn('slow', function() {
        // Animation complete
      });
    });</pre>
         <p class="image four-across">
            <img src="images/0042_06_33.png" alt="">
            <img src="images/0042_06_34.png" alt="">
            <img src="images/0042_06_35.png" alt="">
            <img src="images/0042_06_36.png" alt="">
            
         </p>
         
         
         <h4 id="easing">缓冲函数</h4>
         
         <p>
            从 jQuery 1.4.3 起，增加了一个可选的参数，用于确定使用的缓冲函数。缓冲函数确定了动画在不同位置的速度。jQuery默认只提供两个缓冲效果：<code>swing</code>（默认值） 和 线性缓冲效果<code>linear</code>。更多特效需要使用插件。可以访问 <a href="http://jqueryui.com">jQuery UI 网站</a> 来获得更多信息。
         </p>
         
         <h4 id="callback-function">回调函数</h4>
         
         <p>如果提供了回调函数，那么当动画结束时，会调用这个函数。通常用来按顺序执行一组不同的动画。这个函数不接受任何参数，但是 <code>this</code> 会设成将要执行动画的那个元素。如果对多个元素设置动画，那么要非常注意，回调函数会在每一个元素执行完动画后都执行一次，而不是这组动画整体才执行一次。 
         </p>
         
         <p>
            <strong>截止 jQuery 1.6</strong>, <code>
               <a href="promise.htm">.promise()</a>
               </code> 方法可以和 <code>
               <a href="deferred.done.htm">deferred.done()</a>
               </code> 方法一起使用，用于当<em>所有</em>匹配的元素执行完各自的动画后，再调用一个回调函数。 ( 参见 <a href="http://api.jquery.com/promise/#example-1">.promise() 例子</a> )。
         </p>
         
      </div>
      <h3 id="notes-0">补充说明:</h3>
      <div class="longdesc">
         <ul>
            <li>所有的 jQuery 动画, 包括 <code>.fadeIn()</code>, 都可以被关闭，通过全局设置 <code>jQuery.fx.off = true</code>, 效果等同于将动画时间 duration  设置成 0. 可以访问 <a href="jquery.fx.off.htm">jQuery.fx.off</a> 来获得更多信息。
            </li>
            <li><del>由于 <code><a href="https://developer.mozilla.org/en/DOM/window.mozRequestAnimationFrame">
                        requestAnimationFrame()
                        </a></code> 特性的原因，绝对不要在 <code>setInterval</code> 或 <code>setTimeout</code> 方法中设置动画队列。 为了保护CPU资源, 支持 <code>requestAnimationFrame</code> 的浏览器在当前窗口或标签失去焦点时，是不更新动画的。如果你通过 <code>setInterval</code> 或 <code>setTimeout</code> 方法在动画暂停时，持续向队列里添加动画，那么在窗口或标签重新获得焦点时，所有在队列中的动画都会被播放。 为了避免这个潜在的问题,可以在循环时,利用最后一个动画的回调函数，或者给元素添加 <code><a href="queue.htm">
                        .queue()
                        </a></code> 方法来避免这个问题，实现动画的继续播放。
                  </del></li>
         </ul>
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>依次把隐藏的 div 以淡入方式显现出来，用时 600 毫秒。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
    span { color:red; cursor:pointer; }
    div { margin:3px; width:80px; display:none;
      height:80px; float:left; }
      div#one { background:#f00; }
      div#two { background:#0f0; }
      div#three { background:#00f; }
    &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;span&gt;Click here...&lt;/span&gt;

    &lt;div id="one"&gt;&lt;/div&gt;
    &lt;div id="two"&gt;&lt;/div&gt;
    &lt;div id="three"&gt;&lt;/div&gt;

&lt;script&gt;


      $(document.body).click(function () {
        $("div:hidden:first").fadeIn("slow");
      });
    

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>在文本上方渐渐显示出一个红色方块。动画完成后，马上再以淡入方式在上面再显示一行文本。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
      p { position:relative; width:400px; height:90px; }
      div { position:absolute; width:400px; height:65px; 
        font-size:36px; text-align:center; 
        color:yellow; background:red;
        padding-top:25px; 
        top:0; left:0; display:none; }
        span { display:none; }
      &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;
        Let it be known that the party of the first part
        and the party of the second part are henceforth
        and hereto directed to assess the allegations
        for factual correctness... (&lt;a href="#"&gt;click!&lt;/a&gt;)
        &lt;div&gt;&lt;span&gt;CENSORED!&lt;/span&gt;&lt;/div&gt;

      &lt;/p&gt;

&lt;script&gt;


        $("a").click(function () {
          $("div").fadeIn(3000, function () {
            $("span").fadeIn(100);
          });
          return false;
        }); 

      

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
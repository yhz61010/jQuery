<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>slice(start, <em class="optional">[end]</em>)<br></h2>
   <div class="desc">
      <p>Reduce the set of matched elements to a subset specified by a range of indices.</p>
      <ul class="signatures">
         <li>
            <h4><span>1.1.4 新增</span>slice(start, <em class="optional">[end]</em>)
               								
            </h4>
            <div class="arguement"><strong>start</strong>
               								(Integer)
               								An integer indicating the 0-based position at which the elements begin to be selected. If negative, it indicates an offset
               from the end of the set.
            </div>
            <div class="arguement"><strong>end</strong>
               								(Integer)
               								 可选参数，An integer indicating the 0-based position at which the elements stop being selected. If negative, it indicates an offset
               from the end of the set. If omitted, the range continues until the end of the set.
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>Given a jQuery object that represents a set of DOM elements, the <code>.slice()</code> method constructs a new jQuery object from a subset of the matching elements. The supplied <code>start</code> index identifies the position of one of the elements in the set; if <code>end</code> is omitted, all elements after this one will be included in the result.
         </p>
         
         <p>Consider a page with a simple list on it:</p>
         <pre>
&lt;ul&gt;
  &lt;li&gt;list item 1&lt;/li&gt;
  &lt;li&gt;list item 2&lt;/li&gt;
  &lt;li&gt;list item 3&lt;/li&gt;
  &lt;li&gt;list item 4&lt;/li&gt;
  &lt;li&gt;list item 5&lt;/li&gt;
&lt;/ul&gt;
</pre>
         <p>We can apply this method to the set of list items:</p>
         <pre>$('li').slice(2).css('background-color', 'red');</pre>
         <p>The result of this call is a red background for items 3, 4, and 5. Note that the supplied index is zero-based, and refers
            to the position of elements within the jQuery object, not within the DOM tree.
         </p>
         
         <p>The end parameter allows us to limit the selected range even further. For example:</p>
         <pre>$('li').slice(2, 4).css('background-color', 'red');</pre>
         <p>Now only items 3 and 4 are selected. The index is once again zero-based; the range extends up to but not including the specified
            index.
         </p>
         
         <h4>Negative Indices</h4>
         
         <p>The jQuery <code>.slice()</code> method is patterned after the JavaScript .slice() method for arrays. One of the features that it mimics is the ability for
            negative numbers to be passed as either the <code>start</code> or <code>end</code> parameter. If a negative number is provided, this indicates a position starting from the end of the set, rather than the
            beginning. For example:
         </p>
         <pre>$('li').slice(-2, -1).css('background-color', 'red');</pre>
         <p>This time only list item 4 is turned red, since it is the only item in the range between two from the end (<code>-2</code>) and one from the end (<code>-1</code>).
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Turns divs yellow based on a random slice.</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { width:40px; height:40px; margin:10px; float:left;
        border:2px solid blue; }
  span { color:red; font-weight:bold; }
  button { margin:5px; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;&lt;button&gt;Turn slice yellow&lt;/button&gt;
  &lt;span&gt;Click the button!&lt;/span&gt;&lt;/p&gt;
  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;

  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;

  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;

&lt;script&gt;



    function colorEm() {
      var $div = $("div");
      var start = Math.floor(Math.random() *
                             $div.length);
      var end = Math.floor(Math.random() *
                           ($div.length - start)) +
                           start + 1;
      if (end == $div.length) end = undefined;
      $div.css("background", "");
      if (end) 
        $div.slice(start, end).css("background", "yellow");   
       else
        $div.slice(start).css("background", "yellow");
      
      $("span").text('$("div").slice(' + start +
                     (end ? ', ' + end : '') +
                     ').css("background", "yellow");');
    }

    $("button").click(colorEm);



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="240"></iframe><h3>示例:</h3>
      <p>Selects all paragraphs, then slices the selection to include only the first element.</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").slice(0, 1).wrapInner("&lt;b&gt;&lt;/b&gt;");</code></pre><h3>示例:</h3>
      <p>Selects all paragraphs, then slices the selection to include only the first and second element.</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").slice(0, 2).wrapInner("&lt;b&gt;&lt;/b&gt;");</code></pre><h3>示例:</h3>
      <p>Selects all paragraphs, then slices the selection to include only the second element.</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").slice(1, 2).wrapInner("&lt;b&gt;&lt;/b&gt;");</code></pre><h3>示例:</h3>
      <p>Selects all paragraphs, then slices the selection to include only the second and third element.</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").slice(1).wrapInner("&lt;b&gt;&lt;/b&gt;");</code></pre><h3>示例:</h3>
      <p>Selects all paragraphs, then slices the selection to include only the third element.</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").slice(-1).wrapInner("&lt;b&gt;&lt;/b&gt;");</code></pre></div>
</div>
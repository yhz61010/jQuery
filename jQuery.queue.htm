<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
		
			(function(){
				$("#go_home").stop(true);
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
				$(window).on("hashchange", function() { 
					var previousUrl = location.href;
					var isAPIPage = previousUrl.lastIndexOf("index.html#");
					if (isAPIPage < 0){
						location.href = "index.html";
					}
				});
			})(jQuery);
		
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Array</span>jQuery.queue(element, <em class="optional">[queueName]</em>)<br></h2>
   <div class="desc">
      <p>显示匹配元素上将要执行的函数队列。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.3 新增</span>jQuery.queue(element, <em class="optional">[queueName]</em>)
               								
            </h4>
            <div class="arguement"><strong>element</strong>
               								(Element)
               								将要被检测的含有队列的 DOM 元素。
            </div>
            <div class="arguement"><strong>queueName</strong>
               								(String)
               								 可选参数，包含队列名称的字符串，默认值是动画效果队列 <code>fx</code>。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>
            <strong>注意：</strong> 这是一个底层方法，应当使用更合适的 <code>
               <a href="queue.htm">.queue()</a>
               </code> 来代替。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>显示队列长度。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;div { margin:3px; width:40px; height:40px;
        position:absolute; left:0px; top:30px; 
        background:green; display:none; }
  div.newcolor { background:blue; }
  span { color:red; }  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;button id="show"&gt;Show Length of Queue&lt;/button&gt;
  &lt;span&gt;&lt;/span&gt;
  &lt;div&gt;&lt;/div&gt;

&lt;script&gt;

$("#show").click(function () {
      var n = jQuery.queue( $("div")[0], "fx" );
      $("span").text("Queue length is: " + n.length);
    });
    function runIt() {
      $("div").show("slow");
      $("div").animate({left:'+=200'},2000);
      $("div").slideToggle(1000);
      $("div").slideToggle("fast");
      $("div").animate({left:'-=200'},1500);
      $("div").hide("slow");
      $("div").show(1200);
      $("div").slideUp("normal", runIt);
    }
    runIt();

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
		
			(function(){
				$("#go_home").stop(true);
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
				$(window).on("hashchange", function() { 
					var previousUrl = location.href;
					var isAPIPage = previousUrl.lastIndexOf("index.html#");
					if (isAPIPage < 0){
						location.href = "index.html";
					}
				});
			})(jQuery);
		
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>jQuery.queue(element, queueName, newQueue)<br></h2>
   <div class="desc">
      <p>操作匹配元素上将要执行的函数队列。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.3 新增</span>jQuery.queue(element, queueName, newQueue)
               								
            </h4>
            <div class="arguement"><strong>element</strong>
               								(Element)
               								带有函数队列数组的 DOM 元素。
            </div>
            <div class="arguement"><strong>queueName</strong>
               								(String)
               								包含队列名称的字符串，默认值是动画效果队列 <code>fx</code>。
            </div>
            <div class="arguement"><strong>newQueue</strong>
               								(Array)
               								一个用于替换现有队列的函数数组。
            </div>
         </li>
         <li>
            <h4><span>1.3 新增</span>jQuery.queue(element, queueName, callback())
               								
            </h4>
            <div class="arguement"><strong>element</strong>
               								(Element)
               								将要往队列中增加一个函数的 DOM 元素。
            </div>
            <div class="arguement"><strong>queueName</strong>
               								(String)
               								包含队列名称的字符串，默认值是动画效果队列 <code>fx</code>。
            </div>
            <div class="arguement"><strong>callback()</strong>
               								(Function)
               								将要添加到队列中的新函数。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>
            <strong>注意：</strong> 这是一个底层方法，应当使用更合适的 <code><a href="queue.htm">.queue()</a></code> 来代替。
         </p>
         	           
         <p>每个元素都可以通过jQuery附加一个或多个函数队列。在大多数程序中，只会使用一个队列（名为 <code>fx</code>）。队列允许异步地对某个元素进行一系列操作，而不是把整个程序挂起。
         </p>
         	           
         <p>可以通过 jQuery 为任何元素添加一个或多个函数队列。但在大多数应用中，通常只使用动画队列(<code>fx</code>)。使用队列，我们可以在一个元素上以异步的方式执行一系列动作，而不需要暂停执行程序。
         </p>
         	           
         <p><code>jQuery.queue()</code> 允许我们直接操作这个函数队列。最常用的用法是调用 <code>jQuery.queue()</code> 时带一个回调函数，这样就能让我们在队列最后的添加一个新的函数。
         </p>
         	           
         <p>注意，当通过 <code>jQuery.queue()</code> 增加一个函数时，务必确保在函数的最后调用了 <code>jQuery.dequeue()</code>，以便能够执行队列中的下一个函数。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>将一个自定义函数加入到队列中。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { margin:3px; width:40px; height:40px;
        position:absolute; left:0px; top:30px; 
        background:green; display:none; }
  div.newcolor { background:blue; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

Click here...
  &lt;div&gt;&lt;/div&gt;

&lt;script&gt;


   $(document.body).click(function () {
      $("div").show("slow");
      $("div").animate({left:'+=200'},2000);
      jQuery.queue( $("div")[0], "fx", function () {
        $(this).addClass("newcolor");
        jQuery.dequeue( this );
      });
      $("div").animate({left:'-=200'},500);
      jQuery.queue( $("div")[0], "fx", function () {
        $(this).removeClass("newcolor");
        jQuery.dequeue( this );
      });
      $("div").slideUp();
    });

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>通过设置一个队列数组，来删除已有的队列。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { margin:3px; width:40px; height:40px;
        position:absolute; left:0px; top:30px; 
        background:green; display:none; }
  div.newcolor { background:blue; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


  &lt;button id="start"&gt;Start&lt;/button&gt;
  &lt;button id="stop"&gt;Stop&lt;/button&gt;
  &lt;div&gt;&lt;/div&gt;

&lt;script&gt;


   $("#start").click(function () {
      $("div").show("slow");
      $("div").animate({left:'+=200'},5000);
      jQuery.queue( $("div")[0], "fx", function () {
        $(this).addClass("newcolor");
        jQuery.dequeue( this );
      });
      $("div").animate({left:'-=200'},1500);
      jQuery.queue( $("div")[0], "fx", function () {
        $(this).removeClass("newcolor");
        jQuery.dequeue( this );
      });
      $("div").slideUp();
    });
    $("#stop").click(function () {
      jQuery.queue( $("div")[0], "fx", [] );
      $("div").stop();
    });


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
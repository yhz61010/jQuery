<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
						$("#go_home").animate({
								opacity: 'toggle'
							}, 1000, function(){
								go_home_blink();
							});
					}
					go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>toggleClass(className)<br></h2>
   <div class="desc">
      <p>根据样式是否存在或根据 switch 参数，为每个匹配的元素添加或移除一个或多个样式。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>toggleClass(className)
               								
            </h4>
            <div class="arguement"><strong>className</strong>
               								(String)
               								为每个匹配的元素设置切换时用的一个或多个样式名，样式名之间用空格分隔。
            </div>
         </li>
         <li>
            <h4><span>1.3 新增</span>toggleClass(className, switch)
               								
            </h4>
            <div class="arguement"><strong>className</strong>
               								(String)
               								为每个匹配的元素设置切换时用的一个或多个样式名，样式名之间用空格分隔。
            </div>
            <div class="arguement"><strong>switch</strong>
               								(Boolean)
               								布尔值（不只是 truthy/falsy），用于判断样式是否应该被添加或移除。
            </div>
         </li>
         <li>
            <h4><span>1.4 新增</span>toggleClass(<em class="optional">[switch]</em>)
               								
            </h4>
            <div class="arguement"><strong>switch</strong>
               								(Boolean)
               								 可选参数，布尔值，用于判断样式是否应该被添加或移除。
            </div>
         </li>
         <li>
            <h4><span>1.4 新增</span>toggleClass(function(index, class, switch), <em class="optional">[switch]</em>)
               								
            </h4>
            <div class="arguement"><strong>function(index, class, switch)</strong>
               								(Function)
               								一个函数，返回为每个匹配元素切换使用的样式名。index 参数表示集合中元素的索引位置，class 参数表示原有的样式，switch 参数表示样式是否应该被添加或移除。
            </div>
            <div class="arguement"><strong>switch</strong>
               								(Boolean)
               								 可选参数，布尔值，用于判断样式是否应该被添加或移除。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>该方法接受一个或多个参数。对于 toggleClass(className) 方法，如果匹配的元素中含有指定的样式，那么该样式会被移除，否则该样式会被添加到匹配的元素中。例如,我们可以在 <code>&lt;div&gt;</code> 使用 <code>.toggleClass()</code> 方法: 
         </p>
         <pre>&lt;div class="tumble"&gt;Some text.&lt;/div&gt;
      </pre>
         <p>第一次执行 <code>$('div.tumble').toggleClass('bounce')</code> 时,我们可以得到了如下的结果：
         </p>
         <pre>&lt;div class="tumble bounce"&gt;Some text.&lt;/div&gt;
      </pre>
         <p>第二次执行 The second time we apply <code>$('div.tumble').toggleClass('bounce')</code> 时,<code>&lt;div&gt;</code> 的只返回了一个 <code>tumble</code> 样式:
         </p>
         <pre>&lt;div class="tumble"&gt;Some text.&lt;/div&gt;</pre>
         <p>类似的，我们可以对上面相同的 <code>&lt;div&gt;</code> 执行 <code>.toggleClass('bounce spin')</code> 方法，就可以实现 <code>&lt;div class="tumble bounce spin"&gt;</code> 和 <code>&lt;div class="tumble"&gt;</code> 之间的样式切换。
         </p>
         
         <p>对于 toggleClass(className, switch) 方法，可以通过第二个参数决定样式是否应该被添加或被移除。如果第二个参数等于 <code>true</code>,那么样式会被添加，如果等于 <code>false</code>,那么样式会被移除。从本质上讲,如下语句:
         </p>
         <pre>$('#foo').toggleClass(className, addOrRemove);</pre>
         <p>等价于:</p>
         <pre>if (addOrRemove) {
    $('#foo').addClass(className);
  }
  else {
    $('#foo').removeClass(className);
  }
  </pre>
         <p>
            <strong>从 jQuery 1.4 开始</strong>,如果不将任何参数传递给 <code>.toggleClass()</code> 方法,那么匹配元素上的所有样式会在该方法第一次执行时被移除，第二次执行时被还原，如此往复。同样的，从 jQuery 1.4 开始,可以用一个函数作为参数，返回应该显示的样式：
         </p>
         <pre>$('div.foo').toggleClass(function() {
  if ($(this).parent().is('.bar')) {
    return 'happy';
  } else {
    return 'sad';
  }
});</pre>
         <p>上面的例子中，如果 <code>&lt;div class="foo"&gt;</code> 的父元素上含有 <code>bar</code> 样式的话，那么会在 <code>&lt;div class="foo"&gt;</code> 元素上追加 <code>happy</code> 样式,使之在 <code>foo happy</code> 样式和 <code>foo</code> 样式之间切换,否则使之在 <code>foo sad</code> 样式和 <code>foo</code> 样式之间切换。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>点击段落时，切换 'highlight' 样式。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;

  p { margin: 4px; font-size:16px; font-weight:bolder;
      cursor:pointer; }
  .blue { color:blue; }
  .highlight { background:yellow; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p class="blue"&gt;Click to toggle&lt;/p&gt;
  &lt;p class="blue highlight"&gt;highlight&lt;/p&gt;
  &lt;p class="blue"&gt;on these&lt;/p&gt;
  &lt;p class="blue"&gt;paragraphs&lt;/p&gt;

&lt;script&gt;


    $("p").click(function () {
      $(this).toggleClass("highlight");
    });


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>在相同的段落上，每点击 3 次会在该段落上追加 "highlight" 样式，第一次和第二次点击时，会移除该样式。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  p { margin: 4px; font-size:16px; font-weight:bolder;
      cursor:pointer; }
  .blue { color:blue; }
  .highlight { background:red; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p class="blue"&gt;Click to toggle (&lt;span&gt;clicks: 0&lt;/span&gt;)&lt;/p&gt;
  &lt;p class="blue highlight"&gt;highlight (&lt;span&gt;clicks: 0&lt;/span&gt;)&lt;/p&gt;
  &lt;p class="blue"&gt;on these (&lt;span&gt;clicks: 0&lt;/span&gt;)&lt;/p&gt;

  &lt;p class="blue"&gt;paragraphs (&lt;span&gt;clicks: 0&lt;/span&gt;)&lt;/p&gt;

&lt;script&gt;


var count = 0;
$("p").each(function() {
  var $thisParagraph = $(this);
  var count = 0;
  $thisParagraph.click(function() {
    count++;
    $thisParagraph.find("span").text('clicks: ' + count);
    $thisParagraph.toggleClass("highlight", count % 3 == 0);
  });
});



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>点击按钮时，根据按钮上的样式，切换所有 div 上的样式。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
.wrap &gt; div { float: left; width: 100px; margin: 1em 1em 0 0;
              padding=left: 3px; border: 1px solid #abc; }
div.a { background-color: aqua; }
div.b { background-color: burlywood; }
div.c { background-color: cornsilk; }
&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


&lt;div class="buttons"&gt;
  &lt;button&gt;toggle&lt;/button&gt;
  &lt;button class="a"&gt;toggle a&lt;/button&gt;
  &lt;button class="a b"&gt;toggle a b&lt;/button&gt;
  &lt;button class="a b c"&gt;toggle a b c&lt;/button&gt;
  &lt;a href="#"&gt;reset&lt;/a&gt;
&lt;/div&gt;
&lt;div class="wrap"&gt;
  &lt;div&gt;&lt;/div&gt;
  &lt;div class="b"&gt;&lt;/div&gt;
  &lt;div class="a b"&gt;&lt;/div&gt;
  &lt;div class="a c"&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;script&gt;


var cls = ['', 'a', 'a b', 'a b c'];
var divs = $('div.wrap').children();
var appendClass = function() {
  divs.append(function() {
    return '&lt;div&gt;' + (this.className || 'none') + '&lt;/div&gt;';
  });
};

appendClass();

$('button').bind('click', function() {
  var tc = this.className || undefined;
  divs.toggleClass(tc);
  appendClass();
});

$('a').bind('click', function(event) {
  event.preventDefault();
  divs.empty().each(function(i) {
    this.className = cls[i];
  });
  appendClass();
});


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
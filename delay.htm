<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
						$("#go_home").animate({
								opacity: 'toggle'
							}, 1000, function(){
								go_home_blink();
							});
					}
					go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>delay(duration, <em class="optional">[queueName]</em>)<br></h2>
   <div class="desc">
      <p>设置一个延时来推迟执行队列中的项目。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.4 新增</span>delay(duration, <em class="optional">[queueName]</em>)
               								
            </h4>
            <div class="arguement"><strong>duration</strong>
               								(Integer)
               								An integer indicating the number of milliseconds to delay execution of the next item in the queue.以毫秒为单位的整数，用于设定队列中的下一项目推迟执行的时间。
            </div>
            <div class="arguement"><strong>queueName</strong>
               								(String)
               								 可选参数，包含队列名称的字符串，默认值是动画效果队列 <code>fx</code>。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>jQuery 1.4新增, <code>.delay()</code> 用于将队列中的函数延时执行。它既可以推迟动画队列中函数的执行，也可以用于自定义队列。只有在队列中的连续事件可以被延时，因此不带参数的 <code>.show()</code> 和 <code>.hide()</code> 就<em>不会有</em>延时，因为他们没有使用动画队列。
         </p>
         
         <p>duration 以毫秒为单位，数字越大，动画越慢。字符串 <code>'fast'</code> 和 <code>'slow'</code> 分别代表200和600毫秒的延时。
         </p>
         
         <p>例如，我们可以使用标准的动画队列，在 <code>&lt;div id="foo"&gt;</code> 的 <code>.slideUp()</code> 和 <code>.fadeIn()</code> 动画之间添加800毫秒的延时 :
         </p>
         <pre>$('#foo').slideUp(300).delay(800).fadeIn(400);</pre>
         <p>当这条语句执行后，元素会有300毫秒的卷起动画，接着暂停800毫秒，最后有400毫秒的淡入动画。</p>
         
         <blockquote>
            
            <p>
               <strong><code>.delay()</code> 用在jQuery动画队列中是再好不过的了。但是，由于其本身的限制，比如无法取消延时—<code>.delay()</code>，所以不能完全用来替代 JavaScript 原生的 <a href="https://developer.mozilla.org/en/DOM/window.setTimeout">setTimeout</a> 函数，后者更适用于通常情况。</strong>
               
            </p>
            
         </blockquote>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>隐藏再显示两个div。其中绿色的div在显示之前，有800毫秒的延时。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
div { position: absolute; width: 60px; height: 60px; float: left; }
.first { background-color: #3f3; left: 0;}
.second { background-color: #33f; left: 80px;}
&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


&lt;p&gt;&lt;button&gt;Run&lt;/button&gt;&lt;/p&gt;
&lt;div class="first"&gt;&lt;/div&gt;
&lt;div class="second"&gt;&lt;/div&gt;
	

&lt;script&gt;


    $("button").click(function() {
      $("div.first").slideUp(300).delay(800).fadeIn(400);
      $("div.second").slideUp(300).fadeIn(400);
    });


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
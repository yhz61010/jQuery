<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>mouseup(handler(eventObject))<br></h2>
   <div class="desc">
      <p>为 JavaScript 的 "mouseup" 事件绑定一个处理函数，或者触发元素上的该事件。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>mouseup(handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>mouseup(<em class="optional">[eventData]</em>, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>eventData</strong>
               								(Object)
               								 可选参数，将要传递给事件处理函数的数据映射。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>mouseup()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>带有参数的该方法是 <code>.bind('mouseup', handler)</code> 的快捷方式 variation, and <code>.trigger('mouseup')</code> in the second.
         </p>
         
         <p><code>mouseup</code> event is sent to an element when the mouse pointer is over the element, and the mouse button is released. 任何 HTML 元素都可以接收该事件。
         </p>
         
         <p>举例来说，请看下面的HTML：</p>
         <pre>&lt;div id="target"&gt;
  Click here
&lt;/div&gt;
&lt;div id="other"&gt;
  Trigger the handler
&lt;/div&gt;
</pre> 
         <p class="image">
            <img src="images/0042_05_02.png" alt="">
            
         </p>
         
         <p>该事件可以绑定在任何 <code>&lt;div&gt;</code> 上：
         </p>
         <pre>$('#target').mouseup(function() {
  alert('Handler for .mouseup() called.');
});
</pre>
         <p>现在，当你在元素上点击了鼠标，就会显示如下的提示框：</p>
         
         <p>
            <span class="output">Handler for .mouseup() called.</span>
            
         </p>
         
         <p>我们也可以通过点击其它元素，手动触发另一个元素上的该事件：</p>
         <pre>$('#other').click(function() {
  $('#target').mouseup();
});</pre>
         <p>在代码执行后，如果你点击 <span class="output">Trigger the handler</span> 将同样会弹出上面的消息。
         </p>
         
         <p>If the user clicks outside an element, drags onto it, and releases the button, this is still counted as a <code>mouseup</code> event. This sequence of actions is not treated as a button press in most user interfaces, so it is usually better to use
            the <code>click</code> event unless we know that the <code>mouseup</code> event is preferable for a particular situation.
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Show texts when mouseup and mousedown event triggering.</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;Press mouse and release here.&lt;/p&gt;


&lt;script&gt;


    $("p").mouseup(function(){
      $(this).append('&lt;span style="color:#F00;"&gt;Mouse up.&lt;/span&gt;');
    }).mousedown(function(){
      $(this).append('&lt;span style="color:#00F;"&gt;Mouse down.&lt;/span&gt;');
    });



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
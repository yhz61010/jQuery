<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
						$("#go_home").animate({
								opacity: 'toggle'
							}, 1000, function(){
								go_home_blink();
							});
					}
					go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:String</span>jQuery.type(obj)<br></h2>
   <div class="desc">
      <p>Determine the internal JavaScript [[Class]] of an object.</p>
      <ul class="signatures">
         <li>
            <h4><span>1.4.3 新增</span>jQuery.type(obj)
               								
            </h4>
            <div class="arguement"><strong>obj</strong>
               								(Object)
               								Object to get the internal JavaScript [[Class]] of.
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>A number of techniques are used to determine the exact return value for an object. The [[Class]] is determined as follows:</p>
         
         <ul>
            	       
            <li>If the object is undefined or null, then "undefined" or "null" is returned accordingly.
               		  
               <ul>
                  		    
                  <li>jQuery.type(undefined) === "undefined"</li>
                  		    
                  <li>jQuery.type() === "undefined"</li>
                  		    
                  <li>jQuery.type(window.notDefined) === "undefined"</li>
                  		    
                  <li>jQuery.type(null) === "null"</li>
                  	    	  
               </ul>
               	       
            </li>
            
            <li>If the object has an internal [[Class]] equivalent to one of the browser's built-in objects, the associated name is returned.
               (<a href="http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/">More details about this technique.</a>)
               <ul>
                  
                  <li>jQuery.type(true) === "boolean"</li>
                  
                  <li>jQuery.type(3) === "number"</li>
                  
                  <li>jQuery.type("test") === "string"</li>
                  
                  <li>jQuery.type(function(){}) === "function"</li>
                  
                  <li>jQuery.type([]) === "array"</li>
                  
                  <li>jQuery.type(new Date()) === "date"</li>
                  
                  <li>jQuery.type(/test/) === "regexp"</li>
                  
               </ul>
               
            </li>
            
            <li>Everything else returns "object" as its type.</li>
            
         </ul>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Find out if the parameter is a RegExp.</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

Is it a RegExp? &lt;b&gt;&lt;/b&gt;

&lt;script&gt;

$("b").append( "" + jQuery.type(/test/) );

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
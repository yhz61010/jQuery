<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>die()<br></h2>
   <div class="desc">
      <p>从元素上移除所有之前通过 <code>.live()</code> 添加的事件处理。
      </p>
      <ul class="signatures">
         <li>
            <h4><span>1.4.1 新增</span>die()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>任何通过 <code>.live()</code> 绑定的事件处理，都可以通过 <code>.die()</code> 进行移除。该方法类似于调用不带参数的 <code>.unbind()</code>。<code>.unbind()</code> 用于移除所有通过 <code>.bind()</code> 绑定的事件处理。
            了解更多信息，请参阅 <code>.live()</code> 和 <code>.unbind()</code>。
         </p>
         
         <p>
            <strong>从 jQuery 1.7 开始</strong>，不再建议使用 <code>.die()</code> (以及它的互补方法 <code>.live()</code>)。请使用 <code><a href="off.htm">
                  .off()</a></code> 来代替，用于移除通过
            <code><a href="on.htm">
                  .on()</a></code> 绑定的事件处理。
            
            
         </p>
         
         <p>
            <strong>注意:</strong> 为了保证 .die() 能正确工作，所使用的选择器必须与初始化 .live() 时所使用的选择器保持一致。
         </p>
         
      </div>
   </div>
</div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>die(eventType, <em class="optional">[handler]</em>)<br></h2>
   <div class="desc">
      <p>从元素上移除之前通过 <code>.live()</code> 添加的事件处理。
      </p>
      <ul class="signatures">
         <li>
            <h4><span>1.3 新增</span>die(eventType, <em class="optional">[handler]</em>)
               								
            </h4>
            <div class="arguement"><strong>eventType</strong>
               								(String)
               								包含 JavaScript 事件类型的字符串。例如 <code>click</code> 或 <code>keydown</code>。
            </div>
            <div class="arguement"><strong>handler</strong>
               								(String)
               								 可选参数，不再需要执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>die(eventTypes)
               								
            </h4>
            <div class="arguement"><strong>eventTypes</strong>
               								(Map)
               								由一个或多个事件类型及其对应的不再需要执行的函数组成的映射，例如 <code>click</code> 或 <code>keydown</code> 及其对应的不再需要执行的函数。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>任何通过 <code>.live()</code> 绑定的事件处理，都可以通过 <code>.die()</code> 进行移除。该方法类似于调用不带参数的 <code>.unbind()</code>。<code>.unbind()</code> 用于移除所有通过 <code>.bind()</code> 绑定的事件处理。
            了解更多信息，请参阅 <code>.live()</code> 和 <code>.unbind()</code>。
         </p>
         
         <p>
            <strong>注意:</strong> 为了保证 .die() 能正确工作，所使用的选择器必须与初始化 .live() 时所使用的选择器保持一致。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>为带颜色的按钮进行事件绑定或解除绑定。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
button { margin:5px; }
button#theone { color:red; background:yellow; }
&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;button id="theone"&gt;Does nothing...&lt;/button&gt;
&lt;button id="bind"&gt;Bind Click&lt;/button&gt;
&lt;button id="unbind"&gt;Unbind Click&lt;/button&gt;

&lt;div style="display:none;"&gt;Click!&lt;/div&gt;

&lt;script&gt;



function aClick() {
  $("div").show().fadeOut("slow");
}
$("#bind").click(function () {
  $("#theone").live("click", aClick)
              .text("Can Click!");
});
$("#unbind").click(function () {
  $("#theone").die("click", aClick)
              .text("Does nothing...");
});



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>解除所有段落上绑定的 live 事件：</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").die()</code></pre><h3>示例:</h3>
      <p>解除所有段落上通过 live 事件绑定的 click 事件：</p>
      <h5>jQuery 代码:</h5><pre><code>$("p").die( "click" )</code></pre><h3>示例:</h3>
      <p>解除之前绑定的事件处理，将该事件处理作为第二个参数：</p>
      <h5>jQuery 代码:</h5><pre><code>var foo = function () {
// code to handle some kind of event
};

$("p").live("click", foo); // ... now foo will be called when paragraphs are clicked ...

$("p").die("click", foo); // ... foo will no longer be called.</code></pre></div>
</div>
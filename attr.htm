<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
		
			(function(){
				$("#go_home").stop(true);
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
				$(window).on("hashchange", function() { 
					var previousUrl = location.href;
					var isAPIPage = previousUrl.lastIndexOf("index.html#");
					if (isAPIPage < 0){
						location.href = "index.html";
					}
				});
			})(jQuery);
		
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:String</span>attr(attributeName)<br></h2>
   <div class="desc">
      <p>取得所有匹配的元素中，第一个元素的属性值（attribute）。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>attr(attributeName)
               								
            </h4>
            <div class="arguement"><strong>attributeName</strong>
               								(String)
               								属性名（attribute）。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>.attr()</code> 方法只取得所有匹配元素的 <em>第一个</em> 元素的属性值（attribute）。要想取得每一个匹配元素的值 ，请使用循环结构，例如 jQuery 的 <code>.each()</code> 或 <code>.map()</code> 方法。
         </p>
         	         
         <p>
            <strong>从 jQuery 1.6 开始，</strong>,如果指定的属性名不存在，那么 <code>.attr()</code> 方法将返回 <code>undefined</code>。另外,<code>.attr()</code> 不应该在如下对象上使用：纯对象，数组，window 对象，或者 document 对象。若要取得或变更 DOM 的属性值，请使用 <a href="prop.htm">.prop()</a> 方法。
         </p>
         
         <p>使用 jQuery 的 <code>.attr()</code> 方法来到得元素的属性值，主要有以下两个好处：
         </p>
         
         <ol>
            
            <li>
               <strong>便捷</strong>: 可以直接在 jQuery 对象或对象链上使用该方法。
            </li>
            
            <li>
               <strong>跨浏览器的一致性</strong>: 在不同的浏览器中，相同的属性返回的属性值可能是不一致的，即使是相同浏览器，由于版本不同，也可能出现这种情况。<code>.attr()</code> 方法减少了这种不一致性。
            </li>
            
         </ol>
         
         <blockquote>
            
            <p>
               <strong>注意:</strong> 所指定的属性名，不能是 value 或 tabindex。
            </p>
            
         </blockquote>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>取得页面上第一个 &lt;em&gt; 的 title 属性值。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  em { color:blue; font-weight;bold; }
  div { color:red; }
&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


&lt;p&gt;
  Once there was a &lt;em title="huge, gigantic"&gt;large&lt;/em&gt; dinosaur...
&lt;/p&gt;

  The title of the emphasis is:&lt;div&gt;&lt;/div&gt;


&lt;script&gt;


var title = $("em").attr("title");
  $("div").text(title);


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
		
			(function(){
				$("#go_home").stop(true);
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
				$(window).on("hashchange", function() { 
					var previousUrl = location.href;
					var isAPIPage = previousUrl.lastIndexOf("index.html#");
					if (isAPIPage < 0){
						location.href = "index.html";
					}
				});
			})(jQuery);
		
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>attr(attributeName, value)<br></h2>
   <div class="desc">
      <p>为所有匹配的元素，设置一个或多个属性值（attribute）。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>attr(attributeName, value)
               								
            </h4>
            <div class="arguement"><strong>attributeName</strong>
               								(String)
               								将要设置的属性名。
            </div>
            <div class="arguement"><strong>value</strong>
               								(String,Number)
               								将要设置的属性值。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>attr(map)
               								
            </h4>
            <div class="arguement"><strong>map</strong>
               								(Map)
               								由属性名及属性值组成的一个映射。
            </div>
         </li>
         <li>
            <h4><span>1.1 新增</span>attr(attributeName, function(index, attr))
               								
            </h4>
            <div class="arguement"><strong>attributeName</strong>
               								(String)
               								将要设置的属性名。
            </div>
            <div class="arguement"><strong>function(index, attr)</strong>
               								(Function)
               								一个函数，返回将要被设置的值。<code>this</code> 指向当前的元素。index 参数表示集合中元素的索引位置。attr 参数表示原有的属性值。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>使用 <code>.attr()</code> 方法设置属性值非常的方便。特别是对于需要设置多个属性值或使用一个函数返要设置值的情况。例如，有如下的图片:
         </p>
         <pre>&lt;img id="greatphoto" src="brush-seller.jpg" alt="brush seller" /&gt;</pre>
         
         <h4 id="setting-simple-attr">设置一个简单的属性</h4>
         
         <p>若要改变 <code>alt</code> 的属性值，只需简单的将属性名和新值传给 <code>.attr()</code> 方法即可：
         </p>
         <pre>$('#greatphoto').attr('alt', 'Beijing Brush Seller');</pre>
         <p>
            <em>增加</em> 一个属性也如此：
         </p>
         <pre>$('#greatphoto')
.attr('title', 'Photo by Kelly Clark');</pre>
         
         <h4 id="setting-several-attrs">一次设置多个属性</h4>
         
         <p>若要同时修改 <code>alt</code> 属性并添加 <code>title</code> 属性，可以将一个由属性名及属性值组成的 map 对象(JavaScript对象字面)传递给该方法。该 map 对象中的每一个键-值对，代表了将要被添加或修改的属性：
         </p>
         <pre>$('#greatphoto').attr({
  alt: 'Beijing Brush Seller',
  title: 'photo by Kelly Clark'
});</pre>
         <p>当设置多个属性时，不需要使用引号包裹属性名。</p>
         
         <p>
            <strong>警告</strong>: 当设置 'class' 属性时,必须使用引号！
         </p>
         
         <p>
            <strong>注意</strong>: jQuery 不允许在任何浏览器中修改 <code>&lt;input&gt;</code> 和 <code>&lt;button&gt;</code> 元素的 <code>type</code> 属性，否则会抛出异常。这是因为在 IE 下，<code>type</code> 属性不能被修改。
         </p>
         
         <h4 id="computed-attr-values">经过计算的属性值</h4>
         
         <p>当使用一个函数设置属性值时，可以根据该元素上的其它属性值返回最终所需的属性值。例如，可以将一个新值与原有的属性值结合起来，作为返回值：</p>
         <pre>$('#greatphoto').attr('title', function(i, val) {
  return val + ' - photo by Kelly Clark'
});</pre>
         <p>这种通过一个函数返回计算后的属性值的方法，特别适用于一次性修改多个元素的属性的场合。</p>
         
         <p>
            <strong>注意: </strong> 如果给定的函数什么都没有返回(例如， <code>function(index, attr){})</code>, 或者返回的是 <code>undefined</code>，那么该属性的属性值不会被修改。适用于只有满足特定的条件时，有选择性的设置属性值的情况。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>为页面上所有的 &lt;img&gt; 设置一些属性。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  img { padding:10px; }
  div { color:red; font-size:24px; }
&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


  &lt;img /&gt;
  &lt;img /&gt;
  &lt;img /&gt;

  &lt;div&gt;&lt;B&gt;Attribute of Ajax&lt;/B&gt;&lt;/div&gt;


&lt;script&gt;


$("img").attr({ 
  src: "/images/hat.gif",
  title: "jQuery",
  alt: "jQuery Logo"
});
$("div").text($("img").attr("alt"));


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>根据 div 在页面上的位置，设置 id 属性。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { color:blue; }
  span { color:red; }
  b { font-weight:bolder; }
        &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


  &lt;div&gt;Zero-th &lt;span&gt;&lt;/span&gt;&lt;/div&gt;
  &lt;div&gt;First &lt;span&gt;&lt;/span&gt;&lt;/div&gt;
  &lt;div&gt;Second &lt;span&gt;&lt;/span&gt;&lt;/div&gt;


&lt;script&gt;


$("div").attr("id", function (arr) {
  return "div-id" + arr;
})
.each(function () {
  $("span", this).html("(ID = '&lt;b&gt;" + this.id + "&lt;/b&gt;')");
});


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>根据图像的 title 属性，设置 src 属性。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


&lt;img title="hat.gif"/&gt;


&lt;script&gt;


$("img").attr("src", function() { 
    return "images/" + this.title; 
});


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
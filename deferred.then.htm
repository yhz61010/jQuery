<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
						$("#go_home").animate({
								opacity: 'toggle'
							}, 1000, function(){
								go_home_blink();
							});
					}
					go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Deferred</span>deferred.then(doneCallbacks, failCallbacks)<br></h2>
   <div class="desc">
      <p>添加当延迟对象被受理（resolve）或被拒绝（reject）时调用的处理程序。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.5 新增</span>deferred.then(doneCallbacks, failCallbacks)
               								
            </h4>
            <div class="arguement"><strong>doneCallbacks</strong>
               								(Function)
               								
               单个函数或函数数组，当延迟对象被受理(resolve)时调用。
               
            </div>
            <div class="arguement"><strong>failCallbacks</strong>
               								(Function)
               								
               单个函数或函数数组，当延迟对象被拒绝(reject)时调用。
               
            </div>
         </li>
         <li>
            <h4><span>1.7 新增</span>deferred.then(doneCallbacks, failCallbacks, <em class="optional">[progressCallbacks]</em>)
               								
            </h4>
            <div class="arguement"><strong>doneCallbacks</strong>
               								(Function)
               								
               单个函数或函数数组，当延迟对象被受理(resolve)时调用。
               
            </div>
            <div class="arguement"><strong>failCallbacks</strong>
               								(Function)
               								
               单个函数或函数数组，当延迟对象被拒绝(reject)时调用。
               
            </div>
            <div class="arguement"><strong>progressCallbacks</strong>
               								(Function)
               								 可选参数，
               单个函数或函数数组，当延迟对象通知进度（progress）时被调用。
               
            </div>
         </li>
      </ul>
      <div class="longdesc"> 
         
         <p>所有的参数(包括从 jQuery 1.7 开始提供的 progressCallbacks)都可以是单个函数或是一个函数数组。不需要使用的参数，可以将其设置成 <code>null</code>。或者使用 <code>.done()</code>, <code>.fail()</code> 或 <code>.progress()</code> 来设定单一类型的回调函数。
         </p>
         
         <p>当延迟对象被受理（resolve）时，doneCallbacks 会被调用。如果延迟对象被拒绝（reject），failCallbacksare 会被调用。从 jQuery 1.7 开始，在迟延对象被受理（resolve）或被拒绝（reject）之前，<code>deferred.notify()</code> 或 <code>deferred.notifyWith()</code> 方法会一直调用 progressCallbacks。
         </p>
         
         <p>回调函数的执行顺序和它们被添加的顺序是一样的。由于 <code>deferred.then</code> 返回的是延迟对象，所以可以链接其它的延迟对象，包括额外的 <code>.then()</code> 方法。了解更多内容，请参见如下文档 <a href="http://api.jquery.com/category/deferred-object/">延迟对象</a>。
         </p> 
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>由于 
         jQuery.get
         方法返回 jqXHR 对象，该对象继承自延迟对象，所以我们可以添加 .then 方法。
      </p>
      <h5>jQuery 代码:</h5><pre><code>
$.get("test.php").then(
    function(){ alert("$.get succeeded"); },
    function(){ alert("$.get failed!"); }
);
</code></pre></div>
</div>
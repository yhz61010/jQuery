<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>replaceWith(newContent)<br></h2>
   <div class="desc">
      <p>根据指定的内容，替换每个匹配的元素。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.2 新增</span>replaceWith(newContent)
               								
            </h4>
            <div class="arguement"><strong>newContent</strong>
               								(String, Element, jQuery)
               								替换用的内容。可以是 HTML 字符串, DOM 元素, 或 jQuery 对象。
            </div>
         </li>
         <li>
            <h4><span>1.4 新增</span>replaceWith(function)
               								
            </h4>
            <div class="arguement"><strong>function</strong>
               								(Function)
               								一个函数，返回替换用的内容。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>.replaceWith()</code> 方法会从 DOM 中移除匹配的内容，并使用替换的内容来代替。例如，有如下的 DOM 结构：
         </p>
         <pre>&lt;div class="container"&gt;
  &lt;div class="inner first"&gt;Hello&lt;/div&gt;
  &lt;div class="inner second"&gt;And&lt;/div&gt;
  &lt;div class="inner third"&gt;Goodbye&lt;/div&gt;
&lt;/div&gt;</pre>
         <p>第二个 inner <code>&lt;div&gt;</code> 会被指定的 HTML 替换掉:
         </p>
         <pre>$('div.second').replaceWith('&lt;h2&gt;New heading&lt;/h2&gt;');</pre>
         <p>结果如下：</p>
         <pre>&lt;div class="container"&gt;
  &lt;div class="inner first"&gt;Hello&lt;/div&gt;
  &lt;h2&gt;New heading&lt;/h2&gt;
  &lt;div class="inner third"&gt;Goodbye&lt;/div&gt;
&lt;/div&gt;</pre>
         <p>
            可能一次替换<em>所有</em> inner <code>&lt;div&gt;</code> 元素：
         </p>
         <pre>$('div.inner').replaceWith('&lt;h2&gt;New heading&lt;/h2&gt;');</pre>
         <p>结果如下：</p>
         <pre>&lt;div class="container"&gt;
  &lt;h2&gt;New heading&lt;/h2&gt;
  &lt;h2&gt;New heading&lt;/h2&gt;
  &lt;h2&gt;New heading&lt;/h2&gt;
&lt;/div&gt;</pre>
         <p>用于替换的内容也可以从页面上选取，例如：</p>
         <pre>$('div.third').replaceWith($('.first'));</pre>
         <p>如果如下：</p>
         <pre>&lt;div class="container"&gt;
  &lt;div class="inner second"&gt;And&lt;/div&gt;
  &lt;div class="inner first"&gt;Hello&lt;/div&gt;
&lt;/div&gt;</pre>
         <p>上面这个例子告诉我们，当从页面上选取元素替换目标元素时，实际上是改变了所选元素的位置，将它从原来的位置移动到了新位置，而不是使用克隆后的元素进行替换。</p>
         
         <p><code>.replaceWith()</code> 方法和大多数 jQuery 方法类似,返回 jQuery 对象，这样就可以使用链式方法了。然而，要特别注意的是，返回的必须是<em>原始的</em> jQuery 对象。对于该方法而言，该对象指向已经从 DOM 中被移除的对象，而不是指向替换用的对象。
         </p>
         
         <p>从 jQuery 1.4 开始, <code>.replaceWith()</code> 方法也可以用于断开的 DOM 节点（disconnected DOM nodes，即，只有结束标签的元素）。例如，执行完下面的 <code>.replaceWith()</code>，其结果是只返回了一个段落：
         </p>
         <pre>$("&lt;div/&gt;").replaceWith("&lt;p&gt;&lt;/p&gt;");</pre>
         <p><code>.replaceWith()</code> 方法也可以使用一个函数作为参数：
         </p>
         <pre>$('div.container').replaceWith(function() {
  return $(this).contents();
});</pre>
         <p>上面代码的执行结果是 <code>&lt;div class="container"&gt;</code> 被它下面的三个子节点 <code>&lt;div&gt;</code> 替换了。当使用函数作为参数时，函数的返回值可以是 HTML 字符串, DOM 节点, 或 jQuery 对象。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>点击按钮后，将按钮替换成一个 div，并且 div 的内容就是该按钮上的文字。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  button { display:block; margin:3px; color:red; width:200px; }
  div { color:red; border:2px solid blue; width:200px;
      margin:3px; text-align:center; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


&lt;button&gt;First&lt;/button&gt;
&lt;button&gt;Second&lt;/button&gt;
&lt;button&gt;Third&lt;/button&gt;


&lt;script&gt;


$("button").click(function () {
  $(this).replaceWith( "&lt;div&gt;" + $(this).text() + "&lt;/div&gt;" );
});


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>使用粗体替换所有的段落。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


&lt;p&gt;Hello&lt;/p&gt;
&lt;p&gt;cruel&lt;/p&gt;
&lt;p&gt;World&lt;/p&gt;


&lt;script&gt;


$("p").replaceWith( "&lt;b&gt;Paragraph. &lt;/b&gt;" );


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>点击段落后，使用页面上的 div 元素替换所选的段落。注意，只是将页面上的 div 移动到所选的段落处，而不是将克隆后的 div 移动到所选的段落处。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { border:2px solid blue; color:red; margin:3px; }
  p { border:2px solid red; color:blue; margin:3px; cursor:pointer; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


  &lt;p&gt;Hello&lt;/p&gt;
  &lt;p&gt;cruel&lt;/p&gt;
  &lt;p&gt;World&lt;/p&gt;

  &lt;div&gt;Replaced!&lt;/div&gt;


&lt;script&gt;


$("p").click(function () {
  $(this).replaceWith( $("div") );
});


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>点击按钮，将样式为 container 的 div 替换成它所包含的内容，并在段落内的结尾处，显示该 div 的样式名。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt; 
  .container { background-color: #991; }
  .inner { color: #911; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


&lt;p&gt;
  &lt;button&gt;Replace!&lt;/button&gt;
&lt;/p&gt;
&lt;div class="container"&gt;
  &lt;div class="inner"&gt;Scooby&lt;/div&gt;
  &lt;div class="inner"&gt;Dooby&lt;/div&gt;
  &lt;div class="inner"&gt;Doo&lt;/div&gt;
&lt;/div&gt;


&lt;script&gt;


$('button').bind("click", function() {
  var $container = $("div.container").replaceWith(function() {
    return $(this).contents();
  });

  $("p").append( $container.attr("class") );
});


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
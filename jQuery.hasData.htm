<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Boolean</span>jQuery.hasData(element)<br></h2>
   <div class="desc">
      <p>判断一个元素是否含有 jQuery data。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.5 新增</span>jQuery.hasData(element)
               								
            </h4>
            <div class="arguement"><strong>element</strong>
               								(Element)
               								用于检查是否含有 jQuery data 的元素。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>jQuery.hasData()</code> 方法用于检查某元素是否含有 jQuery data，该 jQuery data 是使用 <code>
               <a href="jQuery.data.htm">jQuery.data()</a>
               </code> 进行赋值的。如果某元素上没有关联任何 jQuery data（即，根本没有 data 对象，或 data 对象为空），该方法将返回 <code>false</code>; 否则返回 <code>true</code>。
         </p>
         
         <p><code>jQuery.hasData(element)</code> 的主要优点是它并不创建 data 对象。如果元素上没有 data 对象，那么该方法也不会与元素上的 data 对象关联。相反，<code>jQuery.data(element)</code> 总是向调用者返回一个 data 对象，即使该元素上不含有 data 对象，它也会创建一个。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>为一个元素设置 data，并使用 hasData 查看结果。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;Results: &lt;/p&gt;

&lt;script&gt;


$(function(){
  var $p = jQuery("p"), p = $p[0];
  $p.append(jQuery.hasData(p)+" "); /* false */
  jQuery.data(p, "testing", 123);
  $p.append(jQuery.hasData(p)+" "); /* true*/
  jQuery.removeData(p, "testing");
  $p.append(jQuery.hasData(p)+" "); /* false */
});


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
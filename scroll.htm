<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>scroll(handler(eventObject))<br></h2>
   <div class="desc">
      <p>为 JavaScript 的 "scroll" 事件绑定一个处理函数，或者触发元素上的该事件。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>scroll(handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>scroll(<em class="optional">[eventData]</em>, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>eventData</strong>
               								(Object)
               								 可选参数，将要传递给事件处理函数的数据映射。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>scroll()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>带有参数的该方法是 <code>.bind('scroll', handler)</code> 的快捷方式，不带参数的该方法是 <code>.trigger('scroll')</code> 的快捷方式。
         </p>
         
         <p>若用户在元素内执行了滚动操作，就会触发该元素上的 <code>scroll</code> 事件。该事件不仅可以应用在 <code>window</code> 对象上,也可以在可滚动的 frames 或元素上使用，该元素的 <code>overflow </code> CSS 属性被设置成 <code>scroll</code> (或 <code>auto</code> 当元素实际的高或宽比其内容的高或宽小的场合)。
         </p>
         
         <p>举例来说，请看下面的HTML：</p>
         <pre>&lt;div id="target" style="overflow: scroll; width: 200px; height: 100px;"&gt;
  Lorem ipsum dolor sit amet, consectetur adipisicing elit,
  sed do eiusmod tempor incididunt ut labore et dolore magna
  aliqua. Ut enim ad minim veniam, quis nostrud exercitation
  ullamco laboris nisi ut aliquip ex ea commodo consequat.
  Duis aute irure dolor in reprehenderit in voluptate velit
  esse cillum dolore eu fugiat nulla pariatur. Excepteur
  sint occaecat cupidatat non proident, sunt in culpa qui
  officia deserunt mollit anim id est laborum.
&lt;/div&gt;
&lt;div id="other"&gt;
  Trigger the handler
&lt;/div&gt;
&lt;div id="log"&gt;&lt;/div&gt;</pre>
         <p>从上面定义的 div 样式我们可以看到，由于 div 足够小，所以可以滚动：</p>
         
         
         <p class="image">
            <img src="images/0042_05_11.png" alt="">
            
         </p>
         
         <p>可以向下面这样，将 <code>scroll</code> 事件绑定到元素上：
         </p>
         <pre>$('#target').scroll(function() {
  $('#log').append('&lt;div&gt;Handler for .scroll() called.&lt;/div&gt;');
});</pre>
         <p>现在，当用户在文本上进行上下滚动时，就会触发滚动事件，从而向 <code>&lt;div id="log"&gt;&lt;/div&gt;</code> 中追加了如下信息：
         </p>
         
         <p>
            <span class="output">Handler for .scroll() called.</span>
            
         </p>
         
         <p>我们可以调用不带参数的 <code>.scroll()</code> 方法，手动触发这个事件：
         </p>
         <pre>$('#other').click(function() {
  $('#target').scroll();
});</pre>
         <p>在代码执行后，如果你点击 <span class="output">Trigger the handler</span> 将同样会追加上面的消息。
         </p>
         
         <p>无论什么原因导致元素滚动的位置发生了变化，都会触发 <code>scroll</code> 事件。例如，在滚动条上点击了鼠标或进行了拖拽，在元素内进行了拖拽，按了方向键，或者使用了鼠标滚轮，都会触发该事件。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>在页面滚动时触发一系列动作：</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { color:blue; }
  p { color:green; }
  span { color:red; display:none; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;Try scrolling the iframe.&lt;/div&gt;
  &lt;p&gt;Paragraph - &lt;span&gt;Scroll happened!&lt;/span&gt;&lt;/p&gt;

&lt;script&gt;


    $("p").clone().appendTo(document.body);
    $("p").clone().appendTo(document.body);
    $("p").clone().appendTo(document.body);
    $(window).scroll(function () { 
      $("span").css("display", "inline").fadeOut("slow"); 
    });



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
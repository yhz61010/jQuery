<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:boolean</span>jQuery.isFunction(obj)<br></h2>
   <div class="desc">
      <p>判断传入的参数是否为 Javascript 函数对象。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.2 新增</span>jQuery.isFunction(obj)
               								
            </h4>
            <div class="arguement"><strong>obj</strong>
               								(Object)
               								将要被检查的对象。用于判断该对象是否为函数。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>
            <strong>注意:</strong> 从 jQuery 1.3 开始，在某些浏览器，例如在 Internet Explorer 中，检测浏览器所提供的函数，例如 <code>alert()</code> 和 DOM 元素方法，例如 <code>getAttribute()</code> 等，则不能保证在检测这些方法时，会被检测成函数。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>测试一些参数是否为函数的例子。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { color:blue; margin:2px; font-size:14px; }
  span { color:red; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


  &lt;div&gt;jQuery.isFunction(objs[0]) = &lt;span&gt;&lt;/span&gt;&lt;/div&gt;

  &lt;div&gt;jQuery.isFunction(objs[1]) = &lt;span&gt;&lt;/span&gt;&lt;/div&gt;
  &lt;div&gt;jQuery.isFunction(objs[2]) = &lt;span&gt;&lt;/span&gt;&lt;/div&gt;
  &lt;div&gt;jQuery.isFunction(objs[3]) = &lt;span&gt;&lt;/span&gt;&lt;/div&gt;

  &lt;div&gt;jQuery.isFunction(objs[4]) = &lt;span&gt;&lt;/span&gt;&lt;/div&gt;
  

&lt;script&gt;


    function stub() {
    }
    var objs = [
          function () {},
          { x:15, y:20 },
          null,
          stub,
          "function"
        ];

    jQuery.each(objs, function (i) {
      var isFunc = jQuery.isFunction(objs[i]);
      $("span").eq(i).text(isFunc);
    });


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>判断传入的参数是否为函数。</p>
      <h5>jQuery 代码:</h5><pre><code>$.isFunction(function(){});</code></pre><h5>结果:</h5><pre><code>true</code></pre></div>
</div>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Integer</span>height()<br></h2>
   <div class="desc">
      <p>取得匹配集合中第一个元素经过计算后的高度。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>height()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>.css('height')</code> 和 <code>.height()</code> 的区别在于，后者返回的是不带单位的像素值(例如，<code>400</code>)。然而，前者返回的是带单位的值(例如，<code>400px</code>)。建议在需要对元素的高度进行数学计算的场合使用 <code>.height()</code> 方法。
         </p>
         
         <p class="image">
            <img src="images/0042_04_01.png">
            
         </p>
         
         
         <p>该方法同样可以取得 window 和 document 的高度。</p>
         
         <pre>$(window).height();   // returns height of browser viewport
$(document).height(); // returns height of HTML document</pre>
         
         <p>注意，<code>.height()</code> 总是返回内容的高度，而不考虑 CSS 属性 <code>box-sizing</code> 的值。
         </p>
         
         <blockquote>
            <p><strong>注意:</strong> 尽管 <code>style</code> 和 <code>script</code> 标签也有 <code>.width()</code> 和 <code>height()</code> 值，但是当绝对定义并给定 <code>display:block</code> 时，强烈不赞成在这些标签上调用上述方法。因为这种作法不但不好，而且其结果也被证明是不可靠的。
            </p>
         </blockquote>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>显示不同元素的高度。注意，由于例子中的高度值是来自 iframe 的，因此可能比实际值小。以黄色高亮形式显示的就是 iframe 的内主体。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  body { background:yellow; }
  button { font-size:12px; margin:2px; }
  p { width:150px; border:1px red solid; }
  div { color:red; font-weight:bold; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;button id="getp"&gt;Get Paragraph Height&lt;/button&gt;
  &lt;button id="getd"&gt;Get Document Height&lt;/button&gt;
  &lt;button id="getw"&gt;Get Window Height&lt;/button&gt;

  &lt;div&gt;&amp;nbsp;&lt;/div&gt;
  &lt;p&gt;
    Sample paragraph to test height
  &lt;/p&gt;

&lt;script&gt;


    function showHeight(ele, h) {
      $("div").text("The height for the " + ele + 
                    " is " + h + "px.");
    }
    $("#getp").click(function () { 
      showHeight("paragraph", $("p").height()); 
    });
    $("#getd").click(function () { 
      showHeight("document", $(document).height()); 
    });
    $("#getw").click(function () { 
      showHeight("window", $(window).height()); 
    });



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>height(value)<br></h2>
   <div class="desc">
      <p>为每个匹配的元素设置 CSS 高度。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>height(value)
               								
            </h4>
            <div class="arguement"><strong>value</strong>
               								(String, Number)
               								设置高度用的像素值，可以是不带单位的整数值，也可以是整数带单位的字符串。
            </div>
         </li>
         <li>
            <h4><span>1.4.1 新增</span>height(function(index, height))
               								
            </h4>
            <div class="arguement"><strong>function(index, height)</strong>
               								(Function)
               								一个函数，返回用于设置的高度。该函数接受两个参数，index 参数表示元素在集合中的位置，height 参数表示原来的高度。在函数内，<code>this</code> 指向集合中当前的元素。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>当调用 <code>.height(value)</code> 时，value 参数既可以是字符串(数字和单位),也可以是数字。如果是数字的话，jQuery 会假定其单位是像素。如果是字符串的话，则必须使用有效的 CSS 高度单位(例如 <code>100px</code>, <code>50%</code>, 或 <code>auto</code>)。注意，在主流的浏览器中，CSS 高度属性不包含 padding, border, 或 margin。
         </p>
         
         <p>如果不显式的指定单位(像 'em' 或 '%')，那么会使用 "px" 连接数值。</p>
         
         <p>注意，使用 <code>.height(value)</code> 设置盒子的高度与 CSS 属性 <code>box-sizing</code> 是一致的。如果将这个属性换成 <code>border-box</code>，则会导致该函数将改变盒子的 outerHeight 而不是内容的高度。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>点击 div 时，将其高度变成 30px 并改变它的颜色。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;div { width:50px; height:70px; float:left; margin:5px;
        background:rgb(255,140,0); cursor:pointer; }  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;

  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;

&lt;script&gt;

$("div").one('click', function () {
      $(this).height(30)
             .css({cursor:"auto", backgroundColor:"green"});
    });

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
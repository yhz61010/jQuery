<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Array</span>jQuery.map(array, callback(elementOfArray, indexInArray))<br></h2>
   <div class="desc">
      <p>Translate all items in an array or object to new array of items.</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>jQuery.map(array, callback(elementOfArray, indexInArray))
               								
            </h4>
            <div class="arguement"><strong>array</strong>
               								(Array)
               								The Array to translate.
            </div>
            <div class="arguement"><strong>callback(elementOfArray, indexInArray)</strong>
               								(Function)
               								The function to process each item against.  The first argument to the function is the array item, the second argument is the
               index in array The function can return any value. Within the function, <code>this</code> refers to the global (window) object.
            </div>
         </li>
         <li>
            <h4><span>1.6 新增</span>jQuery.map(arrayOrObject, callback( value, indexOrKey ))
               								
            </h4>
            <div class="arguement"><strong>arrayOrObject</strong>
               								(Array,Object)
               								The Array or Object to translate.
            </div>
            <div class="arguement"><strong>callback( value, indexOrKey )</strong>
               								(Function)
               								The function to process each item against.  The first argument to the function is the value; the second argument is the index
               or key of the array or object property. The function can return any value to add to the array. A returned array will be flattened
               into the resulting array. Within the function, <code>this</code> refers to the global (window) object. 
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>$.map()</code> method applies a function to each item in an array or object and maps the results into a new array. <strong>Prior to jQuery 1.6</strong>, <code>$.map()</code> supports traversing <em>arrays only</em>. <strong>As of jQuery 1.6</strong> it also traverses objects.
         </p>
         
         <p>Array-like objects — those with a <code>.length</code> property <em>and</em> a value on the <code>.length - 1</code> index — must be converted to actual arrays before being passed to <code>$.map()</code>. The jQuery library provides <a href="jQuery.makeArray.htm">$.makeArray()</a> for such conversions.
         </p>
         <pre class="prettyprint">
// The following object masquerades as an array.
var fakeArray = {"length": 1, 0: "Addy", 1: "Subtracty"};

// Therefore, convert it to a real array
var realArray = $.makeArray( fakeArray )

// Now it can be used reliably with $.map()
$.map( realArray, function(val, i) {
  // do something 
});
</pre>
         <p>The translation function that is provided to this method is called for each top-level element in the array or object and is
            passed two arguments: The element's value and its index or key within the array or object.
         </p>
         
         <p>The function can return:</p>
         
         <ul>
            
            <li>the translated value, which will be mapped to the resulting array</li>
            
            <li>
               <code>null</code>, to remove the item
            </li>
            
            <li>an array of values, which will be flattened into the full array</li>
            
         </ul>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>A couple examples of using .map()</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { color:blue; }
  p { color:green; margin:0; }
  span { color:red; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;&lt;/div&gt;
  &lt;p&gt;&lt;/p&gt;
  &lt;span&gt;&lt;/span&gt;
  

&lt;script&gt;


    var arr = [ "a", "b", "c", "d", "e" ];
    $("div").text(arr.join(", "));

    arr = jQuery.map(arr, function(n, i){
      return (n.toUpperCase() + i);
    });
    $("p").text(arr.join(", "));

    arr = jQuery.map(arr, function (a) { 
      return a + a; 
    });
    $("span").text(arr.join(", "));



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>Map the original array to a new one and add 4 to each value.</p>
      <h5>jQuery 代码:</h5><pre><code>$.map( [0,1,2], function(n){
   return n + 4;
 });</code></pre><h5>结果:</h5><pre><code>[4, 5, 6] </code></pre><h3>示例:</h3>
      <p>Maps the original array to a new one and adds 1 to each value if it is bigger then zero, otherwise it's removed.</p>
      <h5>jQuery 代码:</h5><pre><code>$.map( [0,1,2], function(n){
   return n &gt; 0 ? n + 1 : null;
 });</code></pre><h5>结果:</h5><pre><code>[2, 3] </code></pre><h3>示例:</h3>
      <p>Map the original array to a new one; each element is added with its original value and the value plus one.</p>
      <h5>jQuery 代码:</h5><pre><code>$.map( [0,1,2], function(n){
   return [ n, n + 1 ];
 });</code></pre><h5>结果:</h5><pre><code>[0, 1, 1, 2, 2, 3] </code></pre><h3>示例:</h3>
      <p>Map the original object to a new array and double each value.</p>
      <h5>jQuery 代码:</h5><pre><code>
var dimensions = { width: 10, height: 15, length: 20 };
dimensions = $.map( dimensions, function( value, index ) {
  return value * 2;
}); </code></pre><h5>结果:</h5><pre><code>[20, 30, 40] </code></pre><h3>示例:</h3>
      <p>Map an object's keys to an array.</p>
      <h5>jQuery 代码:</h5><pre><code>
var dimensions = { width: 10, height: 15, length: 20 },
    keys = $.map( dimensions, function( value, index ) {
      return index;
    }); </code></pre><h5>结果:</h5><pre><code>["width", "height", "length"] </code></pre><h3>示例:</h3>
      <p>Maps the original array to a new one; each element is squared.</p>
      <h5>jQuery 代码:</h5><pre><code>
$.map( [0,1,2,3], function (a) { 
  return a * a; 
});</code></pre><h5>结果:</h5><pre><code>[0, 1, 4, 9] </code></pre><h3>示例:</h3>
      <p>Remove items by returning null from the function. This removes any numbers less than 50, and the rest are decreased by 45.</p>
      <h5>jQuery 代码:</h5><pre><code>
$.map( [0, 1, 52, 97], function (a) {
  return (a &gt; 50 ? a - 45 : null); 
});</code></pre><h5>结果:</h5><pre><code>[7, 52] </code></pre><h3>示例:</h3>
      <p>Augmenting the resulting array by returning an array inside the function.</p>
      <h5>jQuery 代码:</h5><pre><code>var array = [0, 1, 52, 97];
array = $.map(array, function(a, index) {
  return [a - 45, index];
}); </code></pre><h5>结果:</h5><pre><code>[-45, 0, -44, 1, 7, 2, 52, 3] </code></pre></div>
</div>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Promise</span>jQuery.when(deferreds)<br></h2>
   <div class="desc">
      <p>Provides a way to execute callback functions based on one or more objects, usually <a href="/category/deferred-object/">Deferred</a> objects that represent asynchronous events.
      </p>
      <ul class="signatures">
         <li>
            <h4><span>1.5 新增</span>jQuery.when(deferreds)
               								
            </h4>
            <div class="arguement"><strong>deferreds</strong>
               								(Deferred)
               								One or more Deferred objects, or plain JavaScript objects.
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>If a single Deferred is passed to <code>jQuery.when</code>, its Promise object (a subset of the Deferred methods) is returned by the method. Additional methods of the Promise object
            can be called to attach callbacks, such as <code><a href="deferred.then.htm">
                  deferred.then</a></code>
            . When the Deferred is resolved or rejected, usually by the code that created the Deferred originally, the appropriate callbacks
            will be called. For example, the jqXHR object returned by <code>jQuery.ajax</code> is a Deferred and can be used this way:
         </p>
         <pre>$.when( $.ajax("test.aspx") ).then(function(ajaxArgs){ 
     alert(ajaxArgs[1]); /* ajaxArgs is [ "success", statusText, jqXHR ] */
});</pre>
         <p>If a single argument is passed to <code>jQuery.when</code> and it is not a Deferred, it will be treated as a resolved Deferred and any doneCallbacks attached will be executed immediately.
            The doneCallbacks are passed the original argument. In this case any failCallbacks you might set are never called since the
            Deferred is never rejected. For example:
         </p>
         <pre>$.when( { testing: 123 } ).done(
   function(x){ alert(x.testing); } /* alerts "123" */
);</pre>
         <p>In the case where multiple Deferred objects are passed to <code>jQuery.when</code>, the method returns the Promise from a new "master" Deferred object that tracks the aggregate state of all the Deferreds
            it has been passed. The method will resolve its master Deferred as soon as all the Deferreds resolve, or reject the master
            Deferred as soon as one of the Deferreds is rejected. If the master Deferred is resolved, it is passed the resolved values
            of all the Deferreds that were passed to <code>jQuery.when</code>. For example, when the Deferreds are <code>jQuery.ajax()</code> requests, the arguments will be the jqXHR objects for the requests, in the order they were given in the argument list.
         </p>
         
         <p>In the multiple-Deferreds case where one of the Deferreds is rejected, <code>jQuery.when</code> immediately fires the failCallbacks for its master Deferred. Note that some of the Deferreds may still be unresolved at that
            point. If you need to perform additional processing for this case, such as canceling any unfinished ajax requests, you can
            keep references to the underlying jqXHR objects in a closure and inspect/cancel them in the failCallback.
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Execute a function after two ajax requests are successful. (See the jQuery.ajax() documentation for a complete description
         of success and error cases for an ajax request).
      </p>
      <h5>jQuery 代码:</h5><pre><code>$.when($.ajax("/page1.php"), $.ajax("/page2.php")).done(function(a1,  a2){
    /* a1 and a2 are arguments resolved for the 
        page1 and page2 ajax requests, respectively */
   var jqXHR = a1[2]; /* arguments are [ "success", statusText, jqXHR ] */
   if ( /Whip It/.test(jqXHR.responseText) ) {
      alert("First page has 'Whip It' somewhere.");
   }
});
</code></pre><h3>示例:</h3>
      <p>Execute the function myFunc when both ajax requests are successful, or myFailure if either one has an error.</p>
      <h5>jQuery 代码:</h5><pre><code>$.when($.ajax("/page1.php"), $.ajax("/page2.php"))
  .then(myFunc, myFailure);
</code></pre></div>
</div>
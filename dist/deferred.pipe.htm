<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Promise</span>deferred.pipe(<em class="optional">[doneFilter]</em>, <em class="optional">[failFilter]</em>)<br></h2>
   <div class="desc">
      <p> Utility method to filter and/or chain Deferreds.  </p>
      <ul class="signatures">
         <li>
            <h4><span>1.6 新增</span>deferred.pipe(<em class="optional">[doneFilter]</em>, <em class="optional">[failFilter]</em>)
               								
            </h4>
            <div class="arguement"><strong>doneFilter</strong>
               								(Function)
               								 可选参数，
               An optional function that is called when the Deferred is resolved.
               
            </div>
            <div class="arguement"><strong>failFilter</strong>
               								(Function)
               								 可选参数，
               An optional function that is called when the Deferred is rejected.
               
            </div>
         </li>
         <li>
            <h4><span>1.7 新增</span>deferred.pipe(<em class="optional">[doneFilter]</em>, <em class="optional">[failFilter]</em>, <em class="optional">[progressFilter]</em>)
               								
            </h4>
            <div class="arguement"><strong>doneFilter</strong>
               								(Function)
               								 可选参数，
               An optional function that is called when the Deferred is resolved.
               
            </div>
            <div class="arguement"><strong>failFilter</strong>
               								(Function)
               								 可选参数，
               An optional function that is called when the Deferred is rejected.
               
            </div>
            <div class="arguement"><strong>progressFilter</strong>
               								(Function)
               								 可选参数，
               An optional function that is called when the Deferred is rejected.
               
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>deferred.pipe()</code> method returns a new promise that filters the status and values of a deferred through a function.  The <code>doneFilter</code> 和 <code>failFilter</code> functions filter the original deferred's resolved / rejected status and values. <strong>As of jQuery 1.7</strong>, the method also accepts a <code>progressFilter</code> function to filter any calls to the original deferred's <code>notify</code> or <code>notifyWith</code> methods. These filter functions can return a new value to be passed along to the piped promise's <code>done()</code> or <code>fail()</code> callbacks, or they can return another observable object (Deferred, Promise, etc) which will pass its resolved / rejected
            status and values to the piped promise's callbacks. If the filter function used is <code>null</code>, or not specified, the piped promise will be resolved or rejected with the same values as the original.
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Filter resolve value:</p>
      <h5>jQuery 代码:</h5><pre><code>
var defer = $.Deferred(),
    filtered = defer.pipe(function( value ) {
      return value * 2;
    });

defer.resolve( 5 );
filtered.done(function( value ) {
  alert( "Value is ( 2*5 = ) 10: " + value );
});
</code></pre><h3>示例:</h3>
      <p>Filter reject value:</p>
      <h5>jQuery 代码:</h5><pre><code>
var defer = $.Deferred(),
    filtered = defer.pipe( null, function( value ) {
      return value * 3;
    });

defer.reject( 6 );
filtered.fail(function( value ) {
  alert( "Value is ( 3*6 = ) 18: " + value );
});
</code></pre><h3>示例:</h3>
      <p>Chain tasks:</p>
      <h5>jQuery 代码:</h5><pre><code>
var request = $.ajax( url, { dataType: "json" } ),
    chained = request.pipe(function( data ) {
      return $.ajax( url2, { data: { user: data.userId } } );
    });

chained.done(function( data ) {
  // data retrieved from url2 as provided by the first request
});

</code></pre></div>
</div>
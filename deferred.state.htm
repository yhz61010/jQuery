<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
		
			(function(){
				$("#go_home").stop(true);
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
				$(window).on("hashchange", function() { 
					var previousUrl = location.href;
					var isAPIPage = previousUrl.lastIndexOf("index.html#");
					if (isAPIPage < 0){
						location.href = "index.html";
					}
				});
			})(jQuery);
		
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:String</span>deferred.state()<br></h2>
   <div class="desc">
      <p>判断当前延迟对象的状态。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.7 新增</span>deferred.state()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>deferred.state() 方法返回一个字符串，代表当前延迟对象的状态。延迟对象可以处于以下三种状态之一：</p>
         
         <ul>
            
            <li>
               <strong>"pending"</strong>: 延迟对象处于未完成的状态(既不是 "rejected" 状态，也不是 "resolved" 状态)。
            </li>
            
            <li>
               <strong>"resolved"</strong>: 延迟对象处于 resolved 状态，意味着 <code><a href="deferred.resolve.htm">
                     deferred.resolve()</a></code>
               或 <code><a href="deferred.resolveWith.htm">
                     deferred.resolveWith()</a></code>
               已经在对象上被调用，并且 doneCallbacks 已经被调用(或者处于被调用的阶段)。
            </li>
            
            <li>
               <strong>"rejected"</strong>: 延迟对象处于 rejected 状态，意味着 <code><a href="deferred.reject.htm">
                     deferred.reject()</a></code>
               或 <code><a href="deferred.rejectWith.htm">
                     deferred.rejectWith()</a></code>
               已经在对象上被调用，并且 failCallbacks 已经被调用(或者处于被调用的阶段)。
            </li>
            
         </ul>
         
         <p>该方法主要用于调试，例如，在准备拒绝（reject）一个延迟对象前，判断它是否已经处于 resolved 状态。</p>
         
      </div>
   </div>
</div>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>map(callback(index, domElement))<br></h2>
   <div class="desc">
      <p>通过一个回调函数来处理匹配集合中的每个元素，将处理后的结果生成一个新的 jQuery 对象。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.2 新增</span>map(callback(index, domElement))
               								
            </h4>
            <div class="arguement"><strong>callback(index, domElement)</strong>
               								(Function)
               								一个函数对象，会在处理集合中的每个元素时被调用。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>由于该方法返回的是经 jQuery 包裹的数组，所以，通常会使用 <code>get()</code> 方法将其转换成普通的数组。
         </p>
         
         <p><code>.map()</code> 方法特别适用于获取或设置元素集合中的值。例如，如下的表单中包含一组 checkbox 框：
         </p>
         <pre>
&lt;form method="post" action=""&gt;
  &lt;fieldset&gt;
    &lt;div&gt;
      &lt;label for="two"&gt;2&lt;/label&gt;
      &lt;input type="checkbox" value="2" id="two" name="number[]"&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;label for="four"&gt;4&lt;/label&gt;
      &lt;input type="checkbox" value="4" id="four" name="number[]"&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;label for="six"&gt;6&lt;/label&gt;
      &lt;input type="checkbox" value="6" id="six" name="number[]"&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;label for="eight"&gt;8&lt;/label&gt;
      &lt;input type="checkbox" value="8" id="eight" name="number[]"&gt;
    &lt;/div&gt;
  &lt;/fieldset&gt;
&lt;/form&gt;
</pre>
         <p>我们可以得到一个用逗号分隔的 checkbox 的 <code>ID</code> 字符串:
         </p>
         <pre>$(':checkbox').map(function() {
  return this.id;
}).get().join(',');</pre>
         <p>上述代码的结果如下： <code>"two,four,six,eight"</code>。
         </p>
         
         <p>在回调函数里，<code>this</code> 指向当前正在循环的 DOM 元素。该函数可以返回一个独立的数据或是一个数组，用于插入到结果集中。如果返回的是数组，数组中的元素会被插入到集合中。如果返回的是 <code>null</code> 或 <code>undefined</code>，则不会插入任何元素。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>获取表单中所有表单元素的值。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  p { color:red; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;&lt;b&gt;Values: &lt;/b&gt;&lt;/p&gt;
  &lt;form&gt;
    &lt;input type="text" name="name" value="John"/&gt;

    &lt;input type="text" name="password" value="password"/&gt;
    &lt;input type="text" name="url" value="http://ejohn.org/"/&gt;

  &lt;/form&gt;

&lt;script&gt;


    $("p").append( $("input").map(function(){
      return $(this).val();
    }).get().join(", ") );



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>下面的例子展现了该方法的一些功能。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  body { font-size:16px; }
  ul { float:left; margin:0 30px; color:blue; }
  #results { color:red; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;ul&gt;
    &lt;li&gt;First&lt;/li&gt;
    &lt;li&gt;Second&lt;/li&gt;
    &lt;li&gt;Third&lt;/li&gt;

    &lt;li&gt;Fourth&lt;/li&gt;
    &lt;li&gt;Fifth&lt;/li&gt;
  &lt;/ul&gt;
  &lt;ul id="results"&gt;

  &lt;/ul&gt;

&lt;script&gt;


var mappedItems = $("li").map(function (index) {
  var replacement = $("&lt;li&gt;").text($(this).text()).get(0);
  if (index == 0) {
    /* make the first item all caps */
    $(replacement).text($(replacement).text().toUpperCase());
  } else if (index == 1 || index == 3) {
    /* delete the second and fourth items */
    replacement = null;
  } else if (index == 2) {
    /* make two of the third item and add some text */
    replacement = [replacement,$("&lt;li&gt;").get(0)];
    $(replacement[0]).append("&lt;b&gt; - A&lt;/b&gt;");
    $(replacement[1]).append("Extra &lt;b&gt; - B&lt;/b&gt;");
  }

  /* replacement will be a dom element, null, 
     or an array of dom elements */
  return replacement;
});
$("#results").append(mappedItems);



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>使 div 的高度相同。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
div { width: 40px; float:left; }
input { clear:left}
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;



&lt;input type="button" value="equalize div heights"&gt;

&lt;div style="background:red; height: 40px; "&gt;&lt;/div&gt;
&lt;div style="background:green; height: 70px;"&gt;&lt;/div&gt;
&lt;div style="background:blue; height: 50px; "&gt;&lt;/div&gt;



&lt;script&gt;


$.fn.equalizeHeights = function() {
  var maxHeight = this.map(function(i,e) {
    return $(e).height();
  }).get();
  
  return this.height( Math.max.apply(this, maxHeight) );
};

$('input').click(function(){
  $('div').equalizeHeights();
});



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
		
			(function(){
				$("#go_home").stop(true);
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
				$(window).on("hashchange", function() { 
					var previousUrl = location.href;
					var isAPIPage = previousUrl.lastIndexOf("index.html#");
					if (isAPIPage < 0){
						location.href = "index.html";
					}
				});
			})(jQuery);
		
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>eq(index)<br></h2>
   <div class="desc">
      <p>仅返回匹配元素集合中指定的索引位置的元素。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.1.2 新增</span>eq(index)
               								
            </h4>
            <div class="arguement"><strong>index</strong>
               								(Integer)
               								一个整数，代表元素位置的索引值（索引值从 0 开始计数）。
            </div>
         </li>
         <li>
            <h4><span>1.4 新增</span>eq(-index)
               								
            </h4>
            <div class="arguement"><strong>-index</strong>
               								(Integer)
               								一个负整数，代表元素逆向位置的索引值。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>若一个 jQuery 对象代表了一个 DOM 元素集合，<code>.eq()</code> 方法会生成一个新的 jQuery 对象，其中包含指定的元素。所提供的索引值代表元素在集合中的位置。
         </p>
         
         <p>例如，在页面中有如下一个简单的列表：</p>
         <pre>
  &lt;ul&gt;
    &lt;li&gt;list item 1&lt;/li&gt;
    &lt;li&gt;list item 2&lt;/li&gt;
    &lt;li&gt;list item 3&lt;/li&gt;
    &lt;li&gt;list item 4&lt;/li&gt;
    &lt;li&gt;list item 5&lt;/li&gt;
  &lt;/ul&gt;
</pre>
         <p>我们可以在列表项集合中应用此方法：</p>
         <pre>
  $('li').eq(2).css('background-color', 'red');
</pre>
         <p>上述代码的执行结果是第三个列表项的背景色变成了红色。注意，所提供的索引值是从 0 开始计数的，代表元素在 jQuery 对象中的位置，而不是其在 DOM 树中的位置。</p>
         
         <p>若提供的位置是一个负数的话，则索引值代表从结尾开始计数，而不是从开头开始计数。例如：</p>
         <pre>
  $('li').eq(-2).css('background-color', 'red');
</pre>
         <p>此次的执行结果是第四个列表项的背景变成了红色，因为它是倒数第二个列表项。</p>
         
         <p>若指定的索引位置不存在，该方法会生成一个新的空 jQuery 对象，它的 <code>length</code> 属性值是 0。
         </p>
         <pre>
  $('li').eq(5).css('background-color', 'red');
</pre>
         <p>上述代码的执行结果是，没有任何列表项会变成红色，因为 <code>.eq(5)</code> 代表的是第六个列表项。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>为索引值是为 2 的 div 添加适当的 class，将其变成蓝色。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { width:60px; height:60px; margin:10px; float:left;
        border:2px solid blue; }
  .blue { background:blue; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;

  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;
  &lt;div&gt;&lt;/div&gt;

&lt;script&gt;



    $("body").find("div").eq(2).addClass("blue");


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
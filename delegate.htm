<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>delegate(selector, eventType, handler(eventObject))<br></h2>
   <div class="desc">
      <p>为所有与选择器匹配的元素的一个或多个事件添加事件处理。基于根元素的一个特定子集，匹配的元素包括那些目前已经匹配到的元素，也包括那些今后可能匹配到的元素。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.4.2 新增</span>delegate(selector, eventType, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>selector</strong>
               								(String)
               								触发事件的元素选择器。
            </div>
            <div class="arguement"><strong>eventType</strong>
               								(String)
               								含有 JavaScript 事件类型的字符串，字符串间使用空格分隔，例如："click" , "keydown," 或自定义事件名称。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.2 新增</span>delegate(selector, eventType, eventData, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>selector</strong>
               								(String)
               								触发事件的元素选择器。
            </div>
            <div class="arguement"><strong>eventType</strong>
               								(String)
               								含有 JavaScript 事件类型的字符串，字符串间使用空格分隔，例如："click" , "keydown," 或自定义事件名称。
            </div>
            <div class="arguement"><strong>eventData</strong>
               								(Object)
               								将要传递给事件处理函数的数据映射。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>delegate(selector, events)
               								
            </h4>
            <div class="arguement"><strong>selector</strong>
               								(String)
               								触发事件的元素选择器。
            </div>
            <div class="arguement"><strong>events</strong>
               								(Map)
               								包含一个或多个将要被调用的，由事件类型和函数组成的映射。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>从 jQuery 1.7 开始，<code>.delegate()</code> 已经被 <a href="on.htm">.on()</a> 方法所取代。然而，对于早期的版本，该方法依然是进行事件代理最有效的方法。更多关于事件绑定和代理的方法，请参阅 <a href="on.htm">.on()</a> 方法。一般来说，这两种方法是等价的：
         </p>
         <pre>
$(elements).delegate(<em>selector</em>, <em>events</em>, <em>data</em>, <em>handler</em>);  // jQuery 1.4.3+
$(elements).on(<em>events</em>, <em>selector</em>, <em>data</em>, <em>handler</em>);        // jQuery 1.7+
 </pre>
         <p>例如，有如下关于 <code>.delegate()</code> 的代码：
         </p>
         
         <pre>$("table").delegate("td", "click", function() {
  $(this).toggleClass("chosen");
});</pre>
         
         <p>它等价于如下 <code>.on()</code> 方法：
         </p>
         
         <pre>$("table").on("click", "td", function() {
  $(this).toggleClass("chosen");
});</pre>
         
         <p>若要移除通过 <code>delegate()</code> 绑定的事件，请使用 <a href="undelegate.htm">.undelegate()</a> 方法。
         </p>
         
         <p>传递并处理 event data 的方式与 <code>.on()</code> 是相同的。
         </p>
         
      </div>
      <h3 id="notes-0">补充说明:</h3>
      <div class="longdesc">
         <ul>
            <li>因为 <code><a href="live.htm">
                     .live()</a></code>
               事件一旦被传播到文档顶部，就不可能再阻止 live 事件的传播。类似的，通过 <code>
                  <a href="delegate.htm">.delegate()</a>
                  </code> 执行的事件，也会传播到调用它们的元素上。同时，任何在 DOM 树中，比这些元素低的元素上绑定的相同事件，在 <code>.delegate()</code> 事件被调用的时候，也会被触发。因此，如果要在事件中阻止委托事件被触发，可以通过调用 <code>
                  <a href="event.stopPropagation.htm">event.stopPropagation()</a>
                  </code> 方法，或返回 <code>false</code> 的方式来实现。
            </li>
         </ul>
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>点击段落时，添加另一个段落。注意，.delegate() 会为所有的段落(包括新生成的段落)绑定事件。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  p { background:yellow; font-weight:bold; cursor:pointer; 
      padding:5px; }
  p.over { background: #ccc; }
  span { color:red; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;Click me!&lt;/p&gt;

  &lt;span&gt;&lt;/span&gt;

&lt;script&gt;


    $("body").delegate("p", "click", function(){
      $(this).after("&lt;p&gt;Another paragraph!&lt;/p&gt;");
    });


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>点击段落时，显示该段落的内容：</p>
      <h5>jQuery 代码:</h5><pre><code>$("body").delegate("p", "click", function(){
  alert( $(this).text() );
});</code></pre><h3>示例:</h3>
      <p>通过返回 false 的方法，取消默认的动作，并阻止事件向上冒泡：</p>
      <h5>jQuery 代码:</h5><pre><code>$("body").delegate("a", "click", function() { return false; })</code></pre><h3>示例:</h3>
      <p>通过使用 preventDefault 方法仅取消默认的动作。</p>
      <h5>jQuery 代码:</h5><pre><code>$("body").delegate("a", "click", function(event){
  event.preventDefault();
});</code></pre><h3>示例:</h3>
      <p>还可以绑定自定义事件。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  p { color:red; }
  span { color:blue; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;Has an attached custom event.&lt;/p&gt;
  &lt;button&gt;Trigger custom event&lt;/button&gt;
  &lt;span style="display:none;"&gt;&lt;/span&gt;

&lt;script&gt;



    $("body").delegate("p", "myCustomEvent", function(e, myName, myValue){
      $(this).text("Hi there!");
      $("span").stop().css("opacity", 1)
               .text("myName = " + myName)
               .fadeIn(30).fadeOut(1000);
    });
    $("button").click(function () {
      $("p").trigger("myCustomEvent");
    });



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
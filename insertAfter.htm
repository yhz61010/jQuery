<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
		
			(function(){
				$("#go_home").stop(true);
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
				$(window).on("hashchange", function() { 
					var previousUrl = location.href;
					var isAPIPage = previousUrl.lastIndexOf("index.html#");
					if (isAPIPage < 0){
						location.href = "index.html";
					}
				});
			})(jQuery);
		
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>insertAfter(target)<br></h2>
   <div class="desc">
      <p>将指定的内容，插入到每个匹配元素的后面，作为其兄弟节点。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>insertAfter(target)
               								
            </h4>
            <div class="arguement"><strong>target</strong>
               								(Selector, Element, jQuery)
               								插入的目标，可以是选择器, 元素, HTML 字符串, 或 jQuery 对象。待插入的内容将会被插入到它的后面。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>
               <a href="after.htm">.after()</a>
               </code> 和 <code>.insertAfter()</code> 方法的功能是一样的。主要的区别在于语法指定（syntax-specifically）上，也就是说在调用方法时，选择的元素及指定的内容这两个参数的位置是不同的。对于 <code> .after()</code> 而言，选择器表达式写在方法的前面，待插入的内容会被插入到它的后面;将要被插入的内容作为方法的参数。而 <code>.insertAfter()</code> 正好相反，将要被插入的内容写在方法的前面（可以是选择器表达式或动态创建的标记），它会被插入到目标容器的后面。
         </p>
         				        
         <p>例如，有如下的 HTML:</p>
         				        <pre>&lt;div class="container"&gt;
  &lt;h2&gt;Greetings&lt;/h2&gt;
  &lt;div class="inner"&gt;Hello&lt;/div&gt;
  &lt;div class="inner"&gt;Goodbye&lt;/div&gt;
&lt;/div&gt;</pre>
         				        <p>可以一次性将需要插入的内容，插入到多个元素的后面：</p>
         				        <pre>$('&lt;p&gt;Test&lt;/p&gt;').insertAfter('.inner');</pre>
         				        <p>其结果是，每个含有 inner 样式的 <code>&lt;div&gt;</code> 的后面，都被插入了新的内容：
         </p>
         				        <pre>&lt;div class="container"&gt;
  &lt;h2&gt;Greetings&lt;/h2&gt;
  &lt;div class="inner"&gt;Hello&lt;/div&gt;
  &lt;p&gt;Test&lt;/p&gt;
  &lt;div class="inner"&gt;Goodbye&lt;/div&gt;
  &lt;p&gt;Test&lt;/p&gt;
&lt;/div&gt;</pre>
         				        <p>也可以选择页面上的元素，并将其插入到另外元素的后面：</p>
         				        <pre>$('h2').insertAfter($('.container'));</pre>
         				        <p>通过这种方法将页面上选择的元素插入到其它地方，实际上是将原来的元素移动到新的位置，而不是将克隆后的元素插入到新的位置：</p>
         				        <pre>&lt;div class="container"&gt;
  &lt;div class="inner"&gt;Hello&lt;/div&gt;
  &lt;div class="inner"&gt;Goodbye&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Greetings&lt;/h2&gt;</pre>
         				        <p>然而，如果目标元素（即被当成容器的元素）不只一个，那么会将克隆后的插入元素，插入到每个目标元素的后面，然后返回新的结果集（原始元素和克隆的元素）。</p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>当所有的段落插入到 id 为 "foo" 的元素的后面。等同于 $("#foo").after("p")</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;#foo { background:yellow; }&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt; is what I said... &lt;/p&gt;&lt;div id="foo"&gt;FOO!&lt;/div&gt;

&lt;script&gt;

$("p").insertAfter("#foo"); // check after() examples

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
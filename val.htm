<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:String, Number, Array</span>val()<br></h2>
   <div class="desc">
      <p>取得匹配元素集合中，第一个元素的值。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>val()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p><code>.val()</code> 方法主要用于取表单元素的值，例如 <code>input</code>, <code>select</code> 和 <code>textarea</code>。像 <code>&lt;select multiple="multiple"&gt;</code> 这样含有多个值的元素,<code>.val()</code> 方法会数组形式，返回每个被选中的选项的值。
         </p>
         
         
         <p>对于 select 和 checkbox, 可以使用 <a href="selected.htm">:selected</a> 和 <a href="checked.htm">:checked</a> 选择器来取值。例如：
         </p>
         <pre>$('select.foo option:selected').val();    // get the value from a dropdown select
$('select.foo').val();                    // get the value from a dropdown select even easier
$('input:checkbox:checked').val();        // get the value from a checked checkbox
$('input:radio[name=bar]:checked').val(); // get the value from a set of radio buttons</pre>
         
         <blockquote>
            
            <p>
               <strong>注意: </strong> 到目前为止, 通过 <code>.val()</code> 方法从 textarea 元素中取得的值是不含有回车（\r）字符的。但是如果该值是通过 XHR 传递给服务器的，回车（\r）字符会被保留（或者是被浏览器添加的，但是在原始数据中并不包含回车（\r））。可以使用下面的 valHook 方法解决这个问题：
            </p>
            
         </blockquote>
         
         <pre>
$.valHooks.textarea = {
&nbsp; &nbsp;&nbsp;get: function( elem ) {
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;return elem.value.replace( /\r?\n/g, "\r\n" );
&nbsp; &nbsp;&nbsp;}
};
</pre>
         </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>从单一列表框和复选列表中取值，并显示选中的值。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  p { color:red; margin:4px; }
  b { color:blue; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;&lt;/p&gt;

  &lt;select id="single"&gt;
    &lt;option&gt;Single&lt;/option&gt;
    &lt;option&gt;Single2&lt;/option&gt;
  &lt;/select&gt;

  &lt;select id="multiple" multiple="multiple"&gt;
    &lt;option selected="selected"&gt;Multiple&lt;/option&gt;
    &lt;option&gt;Multiple2&lt;/option&gt;
    &lt;option selected="selected"&gt;Multiple3&lt;/option&gt;
  &lt;/select&gt;


&lt;script&gt;


    function displayVals() {
      var singleValues = $("#single").val();
      var multipleValues = $("#multiple").val() || [];
      $("p").html("&lt;b&gt;Single:&lt;/b&gt; " + 
                  singleValues +
                  " &lt;b&gt;Multiple:&lt;/b&gt; " + 
                  multipleValues.join(", "));
    }

    $("select").change(displayVals);
    displayVals();



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>取得文本框的值。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;

  p { color:blue; margin:8px; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;input type="text" value="some text"/&gt;
  &lt;p&gt;&lt;/p&gt;

&lt;script&gt;


    $("input").keyup(function () {
      var value = $(this).val();
      $("p").text(value);
    }).keyup();


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>val(value)<br></h2>
   <div class="desc">
      <p>为每个匹配的元素设置值。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>val(value)
               								
            </h4>
            <div class="arguement"><strong>value</strong>
               								(String)
               								将要被设置的值。或者是将要被选中的项目。该值可以是字符串，或字符串数组。
            </div>
         </li>
         <li>
            <h4><span>1.4 新增</span>val(function(index, value))
               								
            </h4>
            <div class="arguement"><strong>function(index, value)</strong>
               								(Function)
               								一个函数，返回将要被设置的值。<code>this</code> 代表当前元素。index 参数表示匹配集合中元素的位置，value 参数表示原有的值。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>该方法通常用于设置表单元素的值。</p>
         
         <p>当传递一组需要设置的值时，可以选中多个 <code>&lt;input type="checkbox"&gt;</code> 和 <code>&lt;input type="radio"&gt;</code>，也可以选中 <code>&lt;select multiple="multiple"&gt;</code> 中的多个 <code>&lt;option&gt;</code> 元素，其它未被设置的值将会变成未选中状态。
         </p>
         
         <p><code>.val()</code> 方法允许我们通过一个函数来设置所需的值。从 jQuery 1.4 开始,这个函数有两个参数，元素的索引位置和原有的值：
         </p>
         <pre>$('input:text.items').val(function( index, value ) {
  return value + ' ' + this.className;
});
</pre>
         <p>上面的例子会在原有文本框的值后面追加 " items" 字符串。</p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>点击按钮时，在文本框中显示按钮的值。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  button { margin:4px; cursor:pointer; }
  input { margin:4px; color:blue; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;
    &lt;button&gt;Feed&lt;/button&gt;
    &lt;button&gt;the&lt;/button&gt;
    &lt;button&gt;Input&lt;/button&gt;
  &lt;/div&gt;
  &lt;input type="text" value="click a button" /&gt;

&lt;script&gt;


    $("button").click(function () {
      var text = $(this).text();
      $("input").val(text);
    });


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>将函数作为参数设置文本框的值。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


  &lt;p&gt;Type something and then click or tab out of the input.&lt;/p&gt;
  &lt;input type="text" value="type something" /&gt;


&lt;script&gt;


  $('input').bind('blur', function() {
    $(this).val(function( i, val ) {
      return val.toUpperCase();
    });
  });
  

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe><h3>示例:</h3>
      <p>设置单一列表框，复选列表，复选框和单选按钮的值。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  body { color:blue; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;select id="single"&gt;
    &lt;option&gt;Single&lt;/option&gt;
    &lt;option&gt;Single2&lt;/option&gt;
  &lt;/select&gt;

  &lt;select id="multiple" multiple="multiple"&gt;
    &lt;option selected="selected"&gt;Multiple&lt;/option&gt;
    &lt;option&gt;Multiple2&lt;/option&gt;
    &lt;option selected="selected"&gt;Multiple3&lt;/option&gt;
  &lt;/select&gt;&lt;br/&gt;
  &lt;input type="checkbox" name="checkboxname" value="check1"/&gt; check1
  &lt;input type="checkbox" name="checkboxname" value="check2"/&gt; check2
  &lt;input type="radio"  name="r" value="radio1"/&gt; radio1
  &lt;input type="radio"  name="r" value="radio2"/&gt; radio2

&lt;script&gt;


    
    $("#single").val("Single2");
    $("#multiple").val(["Multiple2", "Multiple3"]); 
    $("input").val(["check1","check2", "radio1" ]);



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
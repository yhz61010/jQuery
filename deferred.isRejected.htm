<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Boolean</span>deferred.isRejected()<br></h2>
   <div class="desc">
      <p> Determine whether a Deferred object has been rejected. </p>
      <ul class="signatures">
         <li>
            <h4><span>1.5 新增</span>deferred.isRejected()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc"> 
         
         <p>As of jQuery 1.7 this API has been deprecated; please use <code><a href="http://api.jquery.com/deferred.state">
                  deferred.state()</a></code>
            instead.
         </p>
         
         <p>Returns <code>true</code> if the Deferred object is in the rejected state, meaning that either <code><a href="http://api.jquery.com/deferred.reject/">
                  deferred.reject()</a></code>
            or <code><a href="http://api.jquery.com/deferred.rejectWith/">
                  deferred.rejectWith()</a></code>
            has been called for the object and the failCallbacks have been called (or are in the process of being called).
         </p>
         
         <p>Note that a Deferred object can be in one of three states: pending, resolved, or rejected; use <code><a href="http://api.jquery.com/deferred.isResolved/">
                  deferred.isResolved()</a></code>
            to determine whether the Deferred object is in the resolved state. These methods are primarily useful for debugging, for example
            to determine whether a Deferred has already been resolved even though you are inside code that intended to reject it.
         </p>  
         
      </div>
   </div>
</div>
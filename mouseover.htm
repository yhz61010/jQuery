<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>mouseover(handler(eventObject))<br></h2>
   <div class="desc">
      <p>为 JavaScript 的 "mouseover" 事件绑定一个处理函数，或者触发元素上的该事件。（支持事件冒泡）</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>mouseover(handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>mouseover(<em class="optional">[eventData]</em>, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>eventData</strong>
               								(Object)
               								 可选参数，将要传递给事件处理函数的数据映射。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>mouseover()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>带有参数的该方法是 <code>.bind('mouseover', handler)</code> 的快捷方式，不带参数的该方法是 <code>.trigger('mouseover')</code> 的快捷方式。
         </p>
         
         <p>当鼠标指针移入元素时，就会触发 <code>mouseover</code> 事件。任何 HTML 元素都可以接收该事件。
         </p>
         
         <p>举例来说，请看下面的HTML：</p>
         <pre>&lt;div id="outer"&gt;
  Outer
  &lt;div id="inner"&gt;
    Inner
  &lt;/div&gt;
&lt;/div&gt;
&lt;div id="other"&gt;
  Trigger the handler
&lt;/div&gt;
&lt;div id="log"&gt;&lt;/div&gt;</pre>
         
         <p class="image">
            <img src="images/0042_05_06.png" alt="">
            
         </p>
         
         <p>该事件可以绑定在任何元素上：</p>
         <pre>$('#outer').mouseover(function() {
  $('#log').append('&lt;div&gt;Handler for .mouseover() called.&lt;/div&gt;');
});</pre>
         <p>现在，当鼠标指针移入 <span class="output">Outer</span> 
            <code>&lt;div&gt;</code> 时，就会向 <code>&lt;div id="log"&gt;</code> 中添加信息。我们也可以通过点击其它元素，手动触发另一个元素上的该事件： 
         </p>
         <pre>$('#other').click(function() {
  $('#outer').mouseover();
});</pre>
         <p>在代码执行后，如果你点击 <span class="output">Trigger the handler</span> 将同样会追加上面的消息。
         </p>
         
         <p>由于事件冒泡，该事件可能会产生诸多问题。例如上例中，当鼠标指针移入 <span class="output">Inner</span> 元素时，会触发该元素上的 <code>mouseover</code> 事件，然后该事件又冒泡到 <span class="output">Outer</span> 元素上。这就导致了不合时机的 <code>mouseover</code> 事件被调用了。更多相关信息，可以参阅 <code>.<a href="mouseenter.htm">mouseenter</a>()</code>，作为一种更好的替代方法。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>当触发 mouseover 和 mouseenter 事件时，显示鼠标移出对象的次数。当鼠标移入绑定 mouseover 事件元素的子元素时，mouseover 事件同样会被触发。但是，只有在绑定 mouseenter 事件的元素上，将鼠标移入时，才会触发该事件。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
div.out { width:40%; height:120px; margin:0 15px;
          background-color:#D6EDFC; float:left; }
div.in {  width:60%; height:60%; 
          background-color:#FFCC00; margin:10px auto; }
p { line-height:1em; margin:0; padding:0; }
&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


&lt;div class="out overout"&gt;
  &lt;span&gt;move your mouse&lt;/span&gt;
  &lt;div class="in"&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class="out enterleave"&gt;
  &lt;span&gt;move your mouse&lt;/span&gt;
  &lt;div class="in"&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;script&gt;


  var i = 0;
  $("div.overout").mouseover(function() {
    i += 1;
    $(this).find("span").text( "mouse over x " + i );
  }).mouseout(function(){
    $(this).find("span").text("mouse out ");
  });

  var n = 0;
  $("div.enterleave").mouseenter(function() {
    n += 1;
    $(this).find("span").text( "mouse enter x " + n );
  }).mouseleave(function() {
    $(this).find("span").text("mouse leave");
  });



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
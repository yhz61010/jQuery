<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>ajaxSend(handler(event, jqXHR, ajaxOptions))<br></h2>
   <div class="desc">
      <p>注册一个事件处理函数，这个函数会在 Ajax 请求之前被调用。这是一个 <a href="http://docs.jquery.com/Ajax_Events">Ajax 事件</a>。
      </p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>ajaxSend(handler(event, jqXHR, ajaxOptions))
               								
            </h4>
            <div class="arguement"><strong>handler(event, jqXHR, ajaxOptions)</strong>
               								(Function)
               								将要被调用的函数。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>当 Ajax 请求将要发送前，jQuery 会触发 <code>ajaxSend</code> 事件。任何先前通过 <code>.ajaxSend()</code> 方法注册的事件处理函数都会在此刻被执行。
         </p>
         
         <p>为了实际研究这个方法，我们构建一个简单的 Ajax load 请求：</p>
         <pre>&lt;div class="trigger"&gt;Trigger&lt;/div&gt;
&lt;div class="result"&gt;&lt;/div&gt;
&lt;div class="log"&gt;&lt;/div&gt;</pre>
         <p>可以把事件处理函数附加到任何元素上：</p>
         <pre>$('.log').ajaxSend(function() {
  $(this).text('Triggered ajaxSend handler.');
});</pre>
         <p>现在，我们可以用任意 jQuery 方法来发送一个 Ajax 请求，比如在 click 中发送一个请求：</p>
         <pre>$('.trigger').click(function() {
  $('.result').load('ajax/test.html');
});</pre>
         <p>当用户点击含有 <code>trigger</code> 的元素时，在 Ajax 请求将要开始前，会显示日志信息。
         </p>
         
         
         <p>
            <strong>注意：</strong> 由于 <code>.ajaxSend()</code> 是作为一个 jQuery 对象实例的方法来实现的，所以我们在回调函数中可以通过 <code>this</code> 关键字来指向原先所选中的元素。
         </p>
         
         
         <p>无论在哪一个 Ajax 请求将要被发送前，所有的 <code>ajaxSend</code> 处理函数都会被执行。如果有时必须区分出不同的请求，我们可以使用传递给事件处理函数的参数来识别不同的请求。每次 <code>ajaxSend</code> 事件处理函数执行时，都会传递一个事件对象，一个 <code>jqXHR</code> 对象(在 jQuery 1.5 之前, 是 <code><abbr title="XMLHttpRequest">XHR</abbr></code> 对象)，以及一个在请求创建时用的 <a href="jQuery.ajax.htm">参数对象</a>。<del>其中 settings 参数对象就是调用 Ajax 请求时，传递给 $.ajax 方法的 settings 对象(有时候是在 jQuery 内部传递的，比如用 load 方法时，jQuery 内部也会调用 $.ajax 方法，并且构造并传递一个
               settings 参数)。通过 settings 对象，我们就可以用来确定这是哪一个请求。</del>比如说，我们可以限定某个回调函数，仅仅处理某个特定的 URL：
         </p>
         <pre>$('.log').ajaxSend(function(e, jqxhr, settings) {
  if (settings.url == 'ajax/test.html') {
    $(this).text('Triggered ajaxSend handler.');
  }
});</pre>
         </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>在 Ajax 请求将要被发送前，显示一条信息。</p>
      <h5>jQuery 代码:</h5><pre><code>$("#msg").ajaxSend(function(evt, request, settings){
        $(this).append("&lt;li&gt;Starting request at " + settings.url + "&lt;/li&gt;");
      });</code></pre></div>
</div>
<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
		
			(function(){
				$("#go_home").stop(true);
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
				$(window).on("hashchange", function() { 
					var previousUrl = location.href;
					var isAPIPage = previousUrl.lastIndexOf("index.html#");
					if (isAPIPage < 0){
						location.href = "index.html";
					}
				});
			})(jQuery);
		
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>wrapInner(wrappingElement)<br></h2>
   <div class="desc">
      <p>为每个匹配元素的内容包裹一个 HTML 结构。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.2 新增</span>wrapInner(wrappingElement)
               								
            </h4>
            <div class="arguement"><strong>wrappingElement</strong>
               								(String)
               								用于包裹匹配元素内容的 HTML 代码片断，选择器表达式，jQuery 对象，或 DOM 元素。 
            </div>
         </li>
         <li>
            <h4><span>1.4 新增</span>wrapInner(function(index))
               								
            </h4>
            <div class="arguement"><strong>function(index)</strong>
               								(Function)
               								回调函数，返回用于包裹匹配元素内容的结构。index 参数表示匹配元素在集合中的集合。该函数内的 <code>this</code> 指向集合中的当前元素。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>任何可传给 <code>$()</code> 工厂的字符串或对象，都可以作为 <code>.wrapInner()</code> 函数的参数，表示包裹用的 DOM 结构。这种结构可以嵌套多层，但是最内层只能有一个元素。每个匹配元素的内容都会被这种结构包裹。
         </p>
         				        
         <p>例如，有如下的 HTML:</p>
         				        <pre>&lt;div class="container"&gt;
  &lt;div class="inner"&gt;Hello&lt;/div&gt;
  &lt;div class="inner"&gt;Goodbye&lt;/div&gt;
&lt;/div&gt;</pre>
         				        <p>使用 <code>.wrapInner()</code>，我们可以在含有 inner 样式的 <code>&lt;div&gt;</code> 的内容外部，包裹一个 div。这像下面这样：
         </p>
         				        <pre>$('.inner').wrapInner('&lt;div class="new" /&gt;');</pre>
         				        <p>新的 <code>&lt;div&gt;</code> 元素会被添加到 DOM 中。其结果是新的 <code>&lt;div&gt;</code> 包裹了每个匹配元素的内容：
         </p>
         				        <pre>&lt;div class="container"&gt;
  &lt;div class="inner"&gt;
    &lt;div class="new"&gt;Hello&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="inner"&gt;
    &lt;div class="new"&gt;Goodbye&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</pre>
         				        <p>wrapInner(function(index)) 方法允许我们指定一个回调函数。这个回调函数会在每个匹配的元素上调用一次。它返回一个 DOM 元素，jQuery 对象，或是 HTML 片断，用于包裹匹配元素的内容。例如：</p>
         				        <pre>$('.inner').wrapInner(function() {
  return '&lt;div class="' + this.nodeValue + '" /&gt;';
});</pre>
         				        <p>上述代码产生的结果是，每个用于包裹的 <code>&lt;div&gt;</code> 含有的样式就是对应匹配元素内的文本： 
         </p>
         				        <pre>&lt;div class="container"&gt;
  &lt;div class="inner"&gt;
    &lt;div class="Hello"&gt;Hello&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="inner"&gt;
    &lt;div class="Goodbye"&gt;Goodbye&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</pre>
         <p>
            <strong>注意:</strong> 如果将一个选择符字符串传给 <code>.wrapInner()</code> 函数时，其参数应该是格式正确的 HTML，并且 HTML 标签应该是被正确关闭的。下面是一些正确的例子：
         </p>
         <pre>
$(elem).wrapInner("&lt;div class='test' /&gt;");
$(elem).wrapInner("&lt;div class='test'&gt;&lt;/div&gt;");
$(elem).wrapInner("&lt;div class=\"test\"&gt;&lt;/div&gt;");
</pre>
         </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>选择所有的段落，并用 b 标签包裹每个匹配元素的内容。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;p { background:#bbf; }&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;Hello&lt;/p&gt;

  &lt;p&gt;cruel&lt;/p&gt;
  &lt;p&gt;World&lt;/p&gt;

&lt;script&gt;

$("p").wrapInner("&lt;b&gt;&lt;/b&gt;");

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>为 body 元素的内容包裹一个对象树。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;

  div { border:2px green solid; margin:2px; padding:2px; }
  p { background:yellow; margin:2px; padding:2px; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

Plain old text, or is it?

&lt;script&gt;

$("body").wrapInner("&lt;div&gt;&lt;div&gt;&lt;p&gt;&lt;em&gt;&lt;b&gt;&lt;/b&gt;&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;");

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>选择所有的段落，并用 b 标签包裹每个匹配元素的内容。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;p { background:#9f9; }&lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;Hello&lt;/p&gt;

  &lt;p&gt;cruel&lt;/p&gt;
  &lt;p&gt;World&lt;/p&gt;

&lt;script&gt;

$("p").wrapInner(document.createElement("b"));

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>选择所有的段落，并用 jQuery object 包裹每个匹配元素的内容。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;

  p { background:#9f9; }
  .red { color:red; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;Hello&lt;/p&gt;
  &lt;p&gt;cruel&lt;/p&gt;
  &lt;p&gt;World&lt;/p&gt;

&lt;script&gt;

$("p").wrapInner($("&lt;span class='red'&gt;&lt;/span&gt;"));

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
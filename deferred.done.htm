<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Deferred</span>deferred.done(doneCallbacks, <em class="optional">[doneCallbacks]</em>)<br></h2>
   <div class="desc">
      <p>添加延迟对象被受理(done)时执行的处理程序。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.5 新增</span>deferred.done(doneCallbacks, <em class="optional">[doneCallbacks]</em>)
               								
            </h4>
            <div class="arguement"><strong>doneCallbacks</strong>
               								(Function)
               								
               单个函数或函数数组，当延迟对象被受理(done)时调用。
               
            </div>
            <div class="arguement"><strong>doneCallbacks</strong>
               								(Function)
               								 可选参数，
               可选的额外的函数或函数数组，当延迟对象被受理(done)时调用。
               
            </div>
         </li>
      </ul>
      <div class="longdesc"> 
         
         <p><code>deferred.done()</code> 方法可以接受一个或多个参数，每个参数既可以是单个函数，也可以是一个函数数组。当延迟对象被受理(done)时，doneCallbacks 就会被调用。回调函数的执行顺序和它们被添加的顺序是一样的。由于 <code>deferred.done()</code> 返回的是延迟对象，所以可以链接其它的延迟对象，包括额外的 <code>.done()</code> 方法。当延迟对象被受理(done)时，doneCallbacks 就会被调用，并且可以使用传递给 <code><a href="deferred.resolve.htm">
                  resolve</a></code>
            或 <code><a href="deferred.resolveWith.htm">
                  resolveWith</a></code>
            方法的参数，按照它们被添加的顺序。了解更多内容，请参见如下文档 <a href="http://api.jquery.com/category/deferred-object/">延迟对象</a>。
         </p>  
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>由于 
         jQuery.get
         方法返回 jqXHR 对象，该对象继承自延迟对象，所以我们可以使用 .done() 方法，添加一个成功时调用的回调函数。
      </p>
      <h5>jQuery 代码:</h5><pre><code>
$.get("test.php").done(function() { 
  alert("$.get succeeded"); 
});
</code></pre><h3>示例:</h3>
      <p>当用户点击按钮时，受理延迟对象，触发一系列回调函数：</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


 &lt;button&gt;Go&lt;/button&gt;
 &lt;p&gt;Ready...&lt;/p&gt;


&lt;script&gt;


// 3 functions to call when the Deferred object is resolved
function fn1() {
  $("p").append(" 1 ");
}
function fn2() {
  $("p").append(" 2 ");
}
function fn3(n) {
  $("p").append(n + " 3 " + n);
}

// create a deferred object
var dfd = $.Deferred();

// add handlers to be called when dfd is resolved
dfd
// .done() can take any number of functions or arrays of functions
.done( [fn1, fn2], fn3, [fn2, fn1] )
// we can chain done methods, too
.done(function(n) {
  $("p").append(n + " we're done.");
});

// resolve the Deferred object when the button is clicked
$("button").bind("click", function() {
  dfd.resolve("and");
});


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
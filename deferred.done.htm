<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Deferred</span>deferred.done(doneCallbacks, <em class="optional">[doneCallbacks]</em>)<br></h2>
   <div class="desc">
      <p> Add handlers to be called when the Deferred object is resolved. </p>
      <ul class="signatures">
         <li>
            <h4><span>1.5 新增</span>deferred.done(doneCallbacks, <em class="optional">[doneCallbacks]</em>)
               								
            </h4>
            <div class="arguement"><strong>doneCallbacks</strong>
               								(Function)
               								
               A function, or array of functions, that are called when the Deferred is resolved.
               
            </div>
            <div class="arguement"><strong>doneCallbacks</strong>
               								(Function)
               								 可选参数，
               Optional additional functions, or arrays of functions, that are called when the Deferred is resolved.
               
            </div>
         </li>
      </ul>
      <div class="longdesc"> 
         
         <p><code>deferred.done()</code> method accepts one or more arguments, all of which can be either a single function or an array of functions. When the Deferred
            is resolved, the doneCallbacks are called. Callbacks are executed in the order they were added. Since <code>deferred.done()</code> returns the deferred object, other methods of the deferred object can be chained to this one, including additional <code>.done()</code> methods. When the Deferred is resolved, doneCallbacks are executed using the arguments provided to the <code><a href="deferred.resolve.htm">
                  resolve</a></code>
            or <code><a href="deferred.resolveWith.htm">
                  resolveWith</a></code>
            method call in the order they were added. For more information, see the documentation for <a href="/category/deferred-object/">Deferred object</a>.
         </p>  
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>Since the 
         jQuery.get
         method returns a jqXHR object, which is derived from a Deferred object, we can attach a success callback using the .done()
         method.
      </p>
      <h5>jQuery 代码:</h5><pre><code>
$.get("test.php").done(function() { 
  alert("$.get succeeded"); 
});
</code></pre><h3>示例:</h3>
      <p>Resolve a Deferred object when the user clicks a button, triggering a number of callback functions:</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


 &lt;button&gt;Go&lt;/button&gt;
 &lt;p&gt;Ready...&lt;/p&gt;


&lt;script&gt;


// 3 functions to call when the Deferred object is resolved
function fn1() {
  $("p").append(" 1 ");
}
function fn2() {
  $("p").append(" 2 ");
}
function fn3(n) {
  $("p").append(n + " 3 " + n);
}

// create a deferred object
var dfd = $.Deferred();

// add handlers to be called when dfd is resolved
dfd
// .done() can take any number of functions or arrays of functions
.done( [fn1, fn2], fn3, [fn2, fn1] )
// we can chain done methods, too
.done(function(n) {
  $("p").append(n + " we're done.");
});

// resolve the Deferred object when the button is clicked
$("button").bind("click", function() {
  dfd.resolve("and");
});


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="658" height="125"></iframe></div>
</div>
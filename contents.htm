<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
						$("#go_home").animate({
								opacity: 'toggle'
							}, 1000, function(){
								go_home_blink();
							});
					}
					go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>contents()<br></h2>
   <div class="desc">
      <p>取得匹配元素中的每个元素的子元素，包括文本和注释节点。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.2 新增</span>contents()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>若一个 jQuery 对象代表了一个 DOM 元素集合，<code>.contents()</code> 方法允许我们在 DOM 树中查找集合中的直接子元素，并根据匹配的元素创建一个新的 jQuery 对象。<code>.contents()</code> 和 <code>.children()</code> 方法很类似，只不过是在最终的 jQuery 对象中，前者还包括了文本节点和 HTML 元素。
         </p>
         
         <p>如果 iframe 和页面在相同的域中，那么 <code>.contents()</code> 方法可以用于获取 iframe 的内容。
         </p>
         
         <p>例如，有如下一个简单的 <code>&lt;div&gt;</code>，其中含有一些文本节点，每个文本节点由两个换行元素组成 (<code>&lt;br /&gt;</code>)：
         </p>
         <pre>&lt;div class="container"&gt;
  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed 
  do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
  &lt;br /&gt;&lt;br /&gt;
  Ut enim ad minim veniam, quis nostrud exercitation ullamco 
  laboris nisi ut aliquip ex ea commodo consequat.
  &lt;br /&gt; &lt;br /&gt;
  Duis aute irure dolor in reprehenderit in voluptate velit 
  esse cillum dolore eu fugiat nulla pariatur.
&lt;/div&gt;
</pre>
         <p>我们可以使用 <code>.contents()</code> 方法，将上述文本转换成三个格式良好的段落：
         </p>
         <pre>
$('.container').contents().filter(function() {
  return this.nodeType == 3;
})
  .wrap('&lt;p&gt;&lt;/p&gt;')
.end()
.filter('br')
  .remove();
</pre>
         <p>上述代码首先取得 <code>&lt;div class="container"&gt;</code> 的内容，然后过滤出文本节点，并使用段落标签包裹这些文本节点。通过测试元素的 <a href="https://developer.mozilla.org/en/nodeType">
               <code>.nodeType</code></a> 属性来达到过滤出文本节点的目的。该 DOM 属性值是一个数值代码，代表节点的类型。文本节点的代码是 3。通过 .end() 方法再次选出 div 的内容，然后再过滤出 <code>&lt;br /&gt;</code> 元素，并移除该元素。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>查找段落中的所有文本节点，并为它们加上 bold 标签。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;Hello &lt;a href="http://ejohn.org/"&gt;John&lt;/a&gt;, how are you doing?&lt;/p&gt;

&lt;script&gt;

$("p").contents().filter(function(){ return this.nodeType != 1; }).wrap("&lt;b/&gt;");

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>改变 iframe 中链接的背景色。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;iframe src="http://api.jquery.com/" width="80%" height="600" id='frameDemo'&gt;&lt;/iframe&gt; 

&lt;script&gt;

$("#frameDemo").contents().find("a").css("background-color","#BADA55");

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
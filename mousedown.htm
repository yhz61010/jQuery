<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
		
			(function(){
				$("#go_home").stop(true);
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
				$(window).on("hashchange", function() { 
					var previousUrl = location.href;
					var isAPIPage = previousUrl.lastIndexOf("index.html#");
					if (isAPIPage < 0){
						location.href = "index.html";
					}
				});
			})(jQuery);
		
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>mousedown(handler(eventObject))<br></h2>
   <div class="desc">
      <p>为 JavaScript 的 "mousedown" 事件绑定一个处理函数，或者触发元素上的该事件。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>mousedown(handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.4.3 新增</span>mousedown(<em class="optional">[eventData]</em>, handler(eventObject))
               								
            </h4>
            <div class="arguement"><strong>eventData</strong>
               								(Object)
               								 可选参数，将要传递给事件处理函数的数据映射。
            </div>
            <div class="arguement"><strong>handler(eventObject)</strong>
               								(Function)
               								每当事件触发时执行的函数。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>mousedown()
               								
            </h4>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>带有参数的该方法是 <code>.bind('mousedown', handler)</code> 的快捷方式 variation, and <code>.trigger('mousedown')</code> in the second.
         </p>
         
         <p>当鼠标在元素上发生了点击动作，就会触发 <code>mousedown</code> 事件。任何 HTML 元素都可以接收该事件。
         </p>
         
         <p>举例来说，请看下面的HTML：</p>
         <pre>&lt;div id="target"&gt;
  Click here
&lt;/div&gt;
&lt;div id="other"&gt;
  Trigger the handler
&lt;/div&gt;</pre>
         
         <p class="image">
            <img src="images/0042_05_01.png" alt="">
            
         </p>
         
         <p>该事件可以绑定在任何 <code>&lt;div&gt;</code> 上：
         </p>
         <pre>$('#target').mousedown(function() {
  alert('Handler for .mousedown() called.');
});</pre>
         <p>现在，当你在元素上点击了鼠标，就会显示如下的提示框：</p>
         
         <p>
            <span class="output">Handler for .mousedown() called.</span>
            
         </p>
         
         <p>我们也可以通过点击其它元素，手动触发另一个元素上的该事件：</p>
         <pre>$('#other').click(function() {
  $('#target').mousedown();
});</pre>
         <p>在代码执行后，如果你点击 <span class="output">Trigger the handler</span> 将同样会弹出上面的消息。
         </p>
         
         <p>鼠标上的任何一个键被按下，都会触发 <code>mousedown</code> 事件。若要区分是哪个键被按下了，我们可以使用 event 对象的 <code>which </code> 属性。虽然不是所有的浏览器都支持该属性(在 IE 中，要使用 button 属性来代替)，但是 jQuery 对该属性进行了标准化，因此你可以放心的在任何浏览器中使用该属性。<code>which</code> 值是 1 时，表示左键，2 表示 中键，3 表示右键。
         </p>
         
         <p>此事件主要是为了确保主按钮被用来开始拖拽操作。如果不进行这样的判断，当用户尝试使用上下文菜单时，就可能出现奇怪的结果。虽然可以通过这些属性，来检测鼠标中键和右键的点击，但不一定是可靠的。例如，在 Opera 和 Safari 中，默认情况下是无法检测鼠标右键的点击的。</p>
         
         <p>如果用户在元素上按住了鼠标不放开，并将鼠标指针移开了该元素，然后再松开了鼠标，此操作依然被认为是该元素上的 <code>mousedown</code> 事件。上述一系列操作，对于大多数界面设计而言，被认为是 "取消" 鼠标点击操作。因此，通过使用 <code>click</code> 事件是比较好的做法，除非在特殊情况下，我们真正关注的是 <code>mousedown</code> 事件。
         </p>
         
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>当触发 mouseup 和 mousedown 事件时，显示一段文本。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;Press mouse and release here.&lt;/p&gt;


&lt;script&gt;


    $("p").mouseup(function(){
      $(this).append('&lt;span style="color:#F00;"&gt;Mouse up.&lt;/span&gt;');
    }).mousedown(function(){
      $(this).append('&lt;span style="color:#00F;"&gt;Mouse down.&lt;/span&gt;');
    });



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
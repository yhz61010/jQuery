<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2>selector1, selector2, selectorN</h2>
   <div class="desc">
      <p>根据指定的选择器组合，选择所需的元素。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>selector1, selector2, selectorN
            </h4>
            <div class="arguement"><strong>selector1</strong>
               								(Selector)
               								任何有效的选择器。
            </div>
            <div class="arguement"><strong>selector2</strong>
               								(Selector)
               								另一个有效的选择器。
            </div>
            <div class="arguement"><strong>selectorN</strong>
               								(Selector)
               								 可选参数，只要你愿意，可以提供更多有效的选择器。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>你可以指定任何数量的选择器，一次性选择出这些元素。这种多表达式组合器是一种有效的选择不同类型的元素的方法。返回的 jQuery 对象内 DOM 元素的顺序可能和它们在文档中的顺序不一致。另一种使用组合选择器的方法是 .<a href="add.htm">add()</a> 方法。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>查找满足以下三种选择器之一的元素。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;

  div,span,p {
    width: 126px;
    height: 60px;
    float:left;
    padding: 3px;
    margin: 2px;
    background-color: #EEEEEE;
    font-size:14px;
  }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;div&lt;/div&gt;

  &lt;p class="myClass"&gt;p class="myClass"&lt;/p&gt;
  &lt;p class="notMyClass"&gt;p class="notMyClass"&lt;/p&gt;
  &lt;span&gt;span&lt;/span&gt;

&lt;script&gt;

$("div,span,p.myClass").css("border","3px solid red");

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>显示在 jQuery 对象中的顺序。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  b { color:red; font-size:16px; display:block; clear:left; }
  div,span,p { width: 40px; height: 40px; float:left;
               margin: 10px; background-color: blue; 
               padding:3px; color:white; 
             }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;span&gt;span&lt;/span&gt;

  &lt;p&gt;p&lt;/p&gt;
  &lt;p&gt;p&lt;/p&gt;
  &lt;div&gt;div&lt;/div&gt;
  &lt;span&gt;span&lt;/span&gt;

  &lt;p&gt;p&lt;/p&gt;
  &lt;div&gt;div&lt;/div&gt;
  &lt;b&gt;&lt;/b&gt;

&lt;script&gt;


    var list = $("div,p,span").map(function () {
      return this.tagName;
    }).get().join(", ");
    $("b").append(document.createTextNode(list));


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Deferred</span>deferred.always(alwaysCallbacks, <em class="optional">[alwaysCallbacks]</em>)<br></h2>
   <div class="desc">
      <p>添加处理程序，无论延迟对象被受理（done）还是被拒绝(fail)，处理程序都会被执行。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.6 新增</span>deferred.always(alwaysCallbacks, <em class="optional">[alwaysCallbacks]</em>)
               								
            </h4>
            <div class="arguement"><strong>alwaysCallbacks</strong>
               								(Function)
               								单个函数或函数数组，无论延迟对象被受理（done）还是被拒绝(fail)，这些函数始终都会被执行。
            </div>
            <div class="arguement"><strong>alwaysCallbacks</strong>
               								(Function)
               								 可选参数，
               可选的额外的函数或函数数组，无论延迟对象被受理（done）还是被拒绝(fail)，这些函数始终都会被执行。
               
            </div>
         </li>
      </ul>
      <div class="longdesc"> 
         
         <p>参数可以是单个函数，也可以是函数数组。无论延迟对象被受理（done）还是被拒绝(fail)，<code>alwaysCallbacks</code> 始终都会被执行。由于 <code>deferred.always()</code> 返回的是延迟对象，所以可以链接其它的延迟对象，包括额外的 <code>.always()</code> 方法。无论延迟对象被受理（done）还是被拒绝(fail)，所添加的处理程序都会按照它们被添加的顺序被执行，并且可以使用传递给如下方法的参数： <code><a href="deferred.resolve.htm">
                  resolve</a></code>
            , <code><a href="deferred.reject.htm">
                  reject</a></code>
            , <code><a href="deferred.resolveWith.htm">
                  resolveWith</a></code>
            和 <code><a href="deferred.rejectWith.htm">
                  rejectWith</a></code>
            。了解更多内容，请参见如下文档 <a href="http://api.jquery.com/category/deferred-object/">延迟对象</a>。
         </p>  
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>由于 
         jQuery.get()
         方法返回 jqXHR 对象，该对象继承自延迟对象，所以我们可以使用 deferred.always() 添加回调函数，无论延迟对象被受理（done）还是被拒绝(fail)，该回调函数都会被调用。
      </p>
      <h5>jQuery 代码:</h5><pre><code>
$.get("test.php").always( function() { 
  alert("$.get completed with success or error callback arguments"); 
} );
</code></pre></div>
</div>
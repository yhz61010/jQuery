<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Object</span>jQuery.data(element, key, value)<br></h2>
   <div class="desc">
      <p>在匹配的元素上随心所欲的存放数据。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.2.3 新增</span>jQuery.data(element, key, value)
               								
            </h4>
            <div class="arguement"><strong>element</strong>
               								(Element)
               								用于存放数据用的 DOM 元素。
            </div>
            <div class="arguement"><strong>key</strong>
               								(String)
               								一个字符串键，代表将要被存储的数据。 
            </div>
            <div class="arguement"><strong>value</strong>
               								(Object)
               								新的数据值。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>
            <strong>注意:</strong> 这是一个底层方法，使用 <code>
               <a href="data.htm">.data()</a>
               </code> 更方便。
         </p>
         	           
         <p><code>jQuery.data()</code> 方法允许我们安全的将任何类型的数据附加到 DOM 元素上，而不用担心循环引用和内存泄露之类的问题。如果 DOM 元素是通过 jQuery 方法删除的或者当用户离开页面时，jQuery 同时也会移除添加在上面的数据。我们可以在单个元素上设置几个独立的数据，并且以后还可以分别检索到它们：
         </p>
         <pre>
jQuery.data(document.body, 'foo', 52);
jQuery.data(document.body, 'bar', 'test');
</pre>
         <p>
            <em>注意:</em> 目前该方法不具有跨平台性，因为 IE 不支持在 XML 文档中通过 expando 属性进行数据存储。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>在 div 元素上先存储再获取数据。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { color:blue; }
  span { color:red; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;
    The values stored were 
    &lt;span&gt;&lt;/span&gt;
    and
    &lt;span&gt;&lt;/span&gt;
  &lt;/div&gt;

&lt;script&gt;

var div = $("div")[0];
    jQuery.data(div, "test", { first: 16, last: "pizza!" });
    $("span:first").text(jQuery.data(div, "test").first);
    $("span:last").text(jQuery.data(div, "test").last);

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
			(function(){
				$("#go_home").stop();
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
			})(jQuery);
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:Object</span>jQuery.data(element, key)<br></h2>
   <div class="desc">
      <p>返回用 <code>jQuery.data(element, name, value)</code> 存放在元素上的指定数据，或者元素上的所有数据。
      </p>
      <ul class="signatures">
         <li>
            <h4><span>1.2.3 新增</span>jQuery.data(element, key)
               								
            </h4>
            <div class="arguement"><strong>element</strong>
               								(Element)
               								将要查询数据的 DOM 元素。
            </div>
            <div class="arguement"><strong>key</strong>
               								(String)
               								存储数据用的键名。
            </div>
         </li>
         <li>
            <h4><span>1.4 新增</span>jQuery.data(element)
               								
            </h4>
            <div class="arguement"><strong>element</strong>
               								(Element)
               								将要查询数据的 DOM 元素。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>
            <strong>注意:</strong> 这是一个底层方法，使用 <code>
               <a href="data.htm">.data()</a>
               </code> 更方便。
         </p>
         
         <p>
            <strong>关于 HTML5 data-* 属性:</strong> 这是一个底层方法，它不会返回 <code>data-*</code> 属性，除非 <code>
               <a href="data.htm">.data()</a>
               </code> 方法已经返回了它们。
         </p>
         
         <p><code>jQuery.data()</code> 方法允许我们安全的将任何类型的数据附加到 DOM 元素上，而不用担心循环引用和内存泄露之类的问题。我们可以同时获取单一元素上几个独立的数据，或者将它们作为一个集合返回：
         </p>
         <pre>alert(jQuery.data( document.body, 'foo' ));
alert(jQuery.data( document.body ));</pre>
         <p>上面两行代码的弹出对话框中的数据，都是先前用 <code>body</code> 设置的。如果先前没有设置过，则会返回一个空字符串。
         </p>
         
         <p>调用 <code>jQuery.data(element)</code> 可以返回一个JavaScript对象，包含元素上所有存放的数据。注意，jQuery 本身也在内部使用这个方法存放数据，比如事件处理函数，所以返回的对象中也包含那些不是你自己代码存放的数据。
         </p>
         
         <p>
            <em>注意:</em> 目前该方法不具有跨平台性，因为 IE 不支持在 XML 文档中通过 expando 属性进行数据存储。
         </p>
         
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>获取存放在元素上名叫 "blah" 的数据。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
div { margin:5px; background:yellow; }
button { margin:5px; font-size:14px; }
p { margin:5px; color:blue; }
span { color:red; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;A div&lt;/div&gt;
&lt;button&gt;Get "blah" from the div&lt;/button&gt;
&lt;button&gt;Set "blah" to "hello"&lt;/button&gt;

&lt;button&gt;Set "blah" to 86&lt;/button&gt;
&lt;button&gt;Remove "blah" from the div&lt;/button&gt;
&lt;p&gt;The "blah" value of this div is &lt;span&gt;?&lt;/span&gt;&lt;/p&gt;

&lt;script&gt;


$("button").click(function(e) {
  var value, div = $("div")[0];

  switch ($("button").index(this)) {
    case 0 :
      value = jQuery.data(div, "blah");
      break;
    case 1 :
      jQuery.data(div, "blah", "hello");
      value = "Stored!";
      break;
    case 2 :
      jQuery.data(div, "blah", 86);
      value = "Stored!";
      break;
    case 3 :
      jQuery.removeData(div, "blah");
      value = "Removed!";
      break;
  }

  $("span").text("" + value);
});



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe></div>
</div>
<!DOCTYPE HTML>
<div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" id="go_home" style="cursor: pointer;" onclick="location.href='index.html'"></div><script xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
		
			(function(){
				$("#go_home").stop(true);
				function go_home_blink() {
					$("#go_home").animate({
							opacity: 'toggle'
						}, 1000, function(){
							go_home_blink();
						});
				}
				go_home_blink();
				$(window).on("hashchange", function() { 
					var previousUrl = location.href;
					var isAPIPage = previousUrl.lastIndexOf("index.html#");
					if (isAPIPage < 0){
						location.href = "index.html";
					}
				});
			})(jQuery);
		
		</script><div xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" class="entry">
   <h2><span>返回值:jQuery</span>filter(selector)<br></h2>
   <div class="desc">
      <p>在匹配的元素集合中，根据指定的选择器或函数进一步筛选所匹配的元素。</p>
      <ul class="signatures">
         <li>
            <h4><span>1.0 新增</span>filter(selector)
               								
            </h4>
            <div class="arguement"><strong>selector</strong>
               								(Selector)
               								选择器字符串，用于进一步筛选集合中的元素。
            </div>
         </li>
         <li>
            <h4><span>1.0 新增</span>filter(function(index))
               								
            </h4>
            <div class="arguement"><strong>function(index)</strong>
               								(Function)
               								一个函数，用于测试匹配集合中的每一个元素。<code>this</code> 代表当前 DOM 元素。
            </div>
         </li>
         <li>
            <h4><span>1.4 新增</span>filter(element)
               								
            </h4>
            <div class="arguement"><strong>element</strong>
               								(Element)
               								一个元素，用于进一步筛选集合中的元素。
            </div>
         </li>
         <li>
            <h4><span>1.4 新增</span>filter(jQuery object)
               								
            </h4>
            <div class="arguement"><strong>jQuery object</strong>
               								(Object)
               								一个已经存在的 jQuery 对象，用于进一步筛选集合中的元素。
            </div>
         </li>
      </ul>
      <div class="longdesc">
         
         <p>若一个 jQuery 对象代表了一个 DOM 元素集合，<code>.filter()</code> 方法会构造一个新的 jQuery 对象，用于存放筛选后的元素。所提供的选择器，会用于测试匹配集合中的每一个元素。所有满足指定的选择器的元素都会包含在结果集中。
         </p>
         
         <p>例如，在页面中有如下一个简单的列表：</p>
         &lt;ul&gt;
         &lt;li&gt;list item 1&lt;/li&gt;
         &lt;li&gt;list item 2&lt;/li&gt;
         &lt;li&gt;list item 3&lt;/li&gt;
         &lt;li&gt;list item 4&lt;/li&gt;
         &lt;li&gt;list item 5&lt;/li&gt;
         &lt;li&gt;list item 6&lt;/li&gt;
         &lt;/ul&gt;
         
         <p>我们可以在列表项集合中应用此方法：</p>
         <pre>
  $('li').filter(':even').css('background-color', 'red');
</pre>
         <p>执行完上述方法的结果是，满足选择器的第 1, 3, 5 个列表项的背景色变成了红色(<code>:even</code> 和 <code>:odd</code> 的索引值是从 0 开始的)。
         </p>
         
         <h4 id="using-filter-function">使用过滤函数</h4>
         
         <p>除了可以指定选择器外，该方法的第二种形式还允许我们使用一个过滤函数。对于匹配集合中的每一个元素，若过滤函数返回 <code>true</code> (或者是 "truthy"（代表真的值）)，那么该元素就会包含在最终的返回结果中，否则，不会包含该元素。假设我们有一个稍微复杂点儿的 HTML 片段：
         </p>
         <pre>
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;list&lt;/strong&gt; item 1 -
    one strong tag&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;list&lt;/strong&gt; item &lt;strong&gt;2&lt;/strong&gt; -
    two &lt;span&gt;strong tags&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;list item 3&lt;/li&gt;
  &lt;li&gt;list item 4&lt;/li&gt;
  &lt;li&gt;list item 5&lt;/li&gt;
  &lt;li&gt;list item 6&lt;/li&gt;
&lt;/ul&gt;
</pre>
         <p>我们可以先选择出列表项，然后再根据它们的内容作进一步筛选：</p>
         <pre>
$('li').filter(function(index) {
  return $('strong', this).length == 1;
}).css('background-color', 'red');
</pre>
         <p>上述代码只会改变第一个列表项的背景色，因为只有第一个列表项仅含有一个 <code>&lt;strong&gt;</code> 标签。在过滤函数中 <code>this</code> 指向的是当前正在处理的 DOM 元素。过滤函数中传入的 index 参数代表匹配的 jQuery 对象集合中 DOM 元素的索引。
         </p>
         
         <p>我们可以利用过滤函数中的 <code>index</code> 参数，该参数是从 0 开始的索引值，此索引值代表未经过滤的匹配元素集合中的元素位置：
         </p>
         <pre>
$('li').filter(function(index) {
  return index % 3 == 2;
}).css('background-color', 'red');
</pre>
         <p>上述代表会将第三个和第六个列表项高亮显示，因为该函数内使用了模运算符(<code>%</code>)来选择那些 <code>index</code> 被 3 整除余 <code>2</code> 的列表项。
         </p>
         
      </div>
   </div>
   <div class="example">
      <h3>示例:</h3>
      <p>改变所有 div 的颜色，然后为含有 "middle" 样式的 div 添加边框。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { width:60px; height:60px; margin:5px; float:left;
        border:2px white solid;}
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;&lt;/div&gt;

  &lt;div class="middle"&gt;&lt;/div&gt;
  &lt;div class="middle"&gt;&lt;/div&gt;
  &lt;div class="middle"&gt;&lt;/div&gt;
  &lt;div class="middle"&gt;&lt;/div&gt;

  &lt;div&gt;&lt;/div&gt;

&lt;script&gt;



    $("div").css("background", "#c8ebcc")
            .filter(".middle")
            .css("border-color", "red");


&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>改变所有 div 的颜色，然后为第二个 div (index == 1) 及 id 为 "fourth" 的 div 添加边框。</p><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  div { width:60px; height:60px; margin:5px; float:left;
        border:3px white solid; }
  &lt;/style&gt;
&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;


  &lt;div id="first"&gt;&lt;/div&gt;
  &lt;div id="second"&gt;&lt;/div&gt;
  &lt;div id="third"&gt;&lt;/div&gt;

  &lt;div id="fourth"&gt;&lt;/div&gt;
  &lt;div id="fifth"&gt;&lt;/div&gt;
  &lt;div id="sixth"&gt;&lt;/div&gt;

&lt;script&gt;


    $("div").css("background", "#b4b0da")
            .filter(function (index) {
                  return index == 1 || $(this).attr("id") == "fourth";
                })
            .css("border", "3px double red");



&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><h4>演示:</h4><iframe src="blank.html" width="708" height="125"></iframe><h3>示例:</h3>
      <p>选择所有的 div，并使用 DOM 元素进行筛选，过滤出 id 为 "unique" 的元素。</p>
      <h5>jQuery 代码:</h5><pre><code>$("div").filter( document.getElementById("unique") )</code></pre><h3>示例:</h3>
      <p>选择所有的 div，并使用 jQuery 对象进行筛选，过滤出 id 为 "unique" 的元素。</p>
      <h5>jQuery 代码:</h5><pre><code>
$("div").filter( $("#unique") )</code></pre></div>
</div>